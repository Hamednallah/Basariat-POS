/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.daos;


import com.basariatpos.db.generated.tables.Users;
import com.basariatpos.db.generated.tables.records.UsersRecord;

import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UsersDao extends DAOImpl<UsersRecord, com.basariatpos.db.generated.tables.pojos.Users, Integer> {

    /**
     * Create a new UsersDao without any configuration
     */
    public UsersDao() {
        super(Users.USERS, com.basariatpos.db.generated.tables.pojos.Users.class);
    }

    /**
     * Create a new UsersDao with an attached configuration
     */
    public UsersDao(Configuration configuration) {
        super(Users.USERS, com.basariatpos.db.generated.tables.pojos.Users.class, configuration);
    }

    @Override
    public Integer getId(com.basariatpos.db.generated.tables.pojos.Users object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchRangeOfUserId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Users.USERS.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchByUserId(Integer... values) {
        return fetch(Users.USERS.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public com.basariatpos.db.generated.tables.pojos.Users fetchOneByUserId(Integer value) {
        return fetchOne(Users.USERS.USER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public Optional<com.basariatpos.db.generated.tables.pojos.Users> fetchOptionalByUserId(Integer value) {
        return fetchOptional(Users.USERS.USER_ID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchByUsername(String... values) {
        return fetch(Users.USERS.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public com.basariatpos.db.generated.tables.pojos.Users fetchOneByUsername(String value) {
        return fetchOne(Users.USERS.USERNAME, value);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public Optional<com.basariatpos.db.generated.tables.pojos.Users> fetchOptionalByUsername(String value) {
        return fetchOptional(Users.USERS.USERNAME, value);
    }

    /**
     * Fetch records that have <code>password_hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchRangeOfPasswordHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.PASSWORD_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password_hash IN (values)</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchByPasswordHash(String... values) {
        return fetch(Users.USERS.PASSWORD_HASH, values);
    }

    /**
     * Fetch records that have <code>full_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchRangeOfFullName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.FULL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>full_name IN (values)</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchByFullName(String... values) {
        return fetch(Users.USERS.FULL_NAME, values);
    }

    /**
     * Fetch records that have <code>role BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchRangeOfRole(String lowerInclusive, String upperInclusive) {
        return fetchRange(Users.USERS.ROLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchByRole(String... values) {
        return fetch(Users.USERS.ROLE, values);
    }

    /**
     * Fetch records that have <code>is_active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchRangeOfIsActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Users.USERS.IS_ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_active IN (values)</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchByIsActive(Boolean... values) {
        return fetch(Users.USERS.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchRangeOfCreatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(Users.USERS.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchByCreatedAt(OffsetDateTime... values) {
        return fetch(Users.USERS.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchRangeOfUpdatedAt(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(Users.USERS.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.basariatpos.db.generated.tables.pojos.Users> fetchByUpdatedAt(OffsetDateTime... values) {
        return fetch(Users.USERS.UPDATED_AT, values);
    }
}
