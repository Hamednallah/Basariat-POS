/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables;


import com.basariatpos.db.generated.Public;
import com.basariatpos.db.generated.tables.records.ShiftreportsummaryviewRecord;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Collection;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Shiftreportsummaryview extends TableImpl<ShiftreportsummaryviewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.shiftreportsummaryview</code>
     */
    public static final Shiftreportsummaryview SHIFTREPORTSUMMARYVIEW = new Shiftreportsummaryview();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShiftreportsummaryviewRecord> getRecordType() {
        return ShiftreportsummaryviewRecord.class;
    }

    /**
     * The column <code>public.shiftreportsummaryview.shift_id</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, Integer> SHIFT_ID = createField(DSL.name("shift_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.shiftreportsummaryview.start_time</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, OffsetDateTime> START_TIME = createField(DSL.name("start_time"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column <code>public.shiftreportsummaryview.end_time</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, OffsetDateTime> END_TIME = createField(DSL.name("end_time"), SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "");

    /**
     * The column
     * <code>public.shiftreportsummaryview.started_by_username</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, String> STARTED_BY_USERNAME = createField(DSL.name("started_by_username"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column
     * <code>public.shiftreportsummaryview.started_by_fullname</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, String> STARTED_BY_FULLNAME = createField(DSL.name("started_by_fullname"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>public.shiftreportsummaryview.shift_status</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, String> SHIFT_STATUS = createField(DSL.name("shift_status"), SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>public.shiftreportsummaryview.opening_float</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, BigDecimal> OPENING_FLOAT = createField(DSL.name("opening_float"), SQLDataType.NUMERIC(12, 2), this, "");

    /**
     * The column
     * <code>public.shiftreportsummaryview.closing_cash_counted</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, BigDecimal> CLOSING_CASH_COUNTED = createField(DSL.name("closing_cash_counted"), SQLDataType.NUMERIC(12, 2), this, "");

    /**
     * The column
     * <code>public.shiftreportsummaryview.expected_cash_in_drawer</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, BigDecimal> EXPECTED_CASH_IN_DRAWER = createField(DSL.name("expected_cash_in_drawer"), SQLDataType.NUMERIC(12, 2), this, "");

    /**
     * The column <code>public.shiftreportsummaryview.cash_variance</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, BigDecimal> CASH_VARIANCE = createField(DSL.name("cash_variance"), SQLDataType.NUMERIC(12, 2), this, "");

    /**
     * The column <code>public.shiftreportsummaryview.shift_notes</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, String> SHIFT_NOTES = createField(DSL.name("shift_notes"), SQLDataType.CLOB, this, "");

    /**
     * The column
     * <code>public.shiftreportsummaryview.total_cash_received_in_shift</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, BigDecimal> TOTAL_CASH_RECEIVED_IN_SHIFT = createField(DSL.name("total_cash_received_in_shift"), SQLDataType.NUMERIC, this, "");

    /**
     * The column
     * <code>public.shiftreportsummaryview.total_bank_received_in_shift</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, BigDecimal> TOTAL_BANK_RECEIVED_IN_SHIFT = createField(DSL.name("total_bank_received_in_shift"), SQLDataType.NUMERIC, this, "");

    /**
     * The column
     * <code>public.shiftreportsummaryview.total_cash_expenses_paid_from_shift</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, BigDecimal> TOTAL_CASH_EXPENSES_PAID_FROM_SHIFT = createField(DSL.name("total_cash_expenses_paid_from_shift"), SQLDataType.NUMERIC, this, "");

    /**
     * The column
     * <code>public.shiftreportsummaryview.total_sales_orders_in_shift</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, Long> TOTAL_SALES_ORDERS_IN_SHIFT = createField(DSL.name("total_sales_orders_in_shift"), SQLDataType.BIGINT, this, "");

    /**
     * The column
     * <code>public.shiftreportsummaryview.total_discounts_in_shift</code>.
     */
    public final TableField<ShiftreportsummaryviewRecord, BigDecimal> TOTAL_DISCOUNTS_IN_SHIFT = createField(DSL.name("total_discounts_in_shift"), SQLDataType.NUMERIC, this, "");

    private Shiftreportsummaryview(Name alias, Table<ShiftreportsummaryviewRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private Shiftreportsummaryview(Name alias, Table<ShiftreportsummaryviewRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("""
        create view "shiftreportsummaryview" as  SELECT s.shift_id,
         s.start_time,
         s.end_time,
         u.username AS started_by_username,
         u.full_name AS started_by_fullname,
         s.status AS shift_status,
         s.opening_float,
         s.closing_cash_counted,
         s.expected_cash_in_drawer,
         s.cash_variance,
         s.notes AS shift_notes,
         ( SELECT COALESCE(sum(p.amount), (0)::numeric) AS "coalesce"
                FROM payments p
               WHERE ((p.shift_id = s.shift_id) AND ((p.payment_method)::text = 'Cash'::text))) AS total_cash_received_in_shift,
         ( SELECT COALESCE(sum(p.amount), (0)::numeric) AS "coalesce"
                FROM payments p
               WHERE ((p.shift_id = s.shift_id) AND ((p.payment_method)::text = 'Bank Transaction'::text))) AS total_bank_received_in_shift,
         ( SELECT COALESCE(sum(e.amount), (0)::numeric) AS "coalesce"
                FROM expenses e
               WHERE ((e.shift_id = s.shift_id) AND ((e.payment_method)::text = 'Cash'::text))) AS total_cash_expenses_paid_from_shift,
         ( SELECT count(DISTINCT so.sales_order_id) AS count
                FROM salesorders so
               WHERE (so.shift_id = s.shift_id)) AS total_sales_orders_in_shift,
         ( SELECT COALESCE(sum(so.discount_amount), (0)::numeric) AS "coalesce"
                FROM salesorders so
               WHERE (so.shift_id = s.shift_id)) AS total_discounts_in_shift
        FROM (shifts s
          JOIN users u ON ((s.started_by_user_id = u.user_id)));
        """), where);
    }

    /**
     * Create an aliased <code>public.shiftreportsummaryview</code> table
     * reference
     */
    public Shiftreportsummaryview(String alias) {
        this(DSL.name(alias), SHIFTREPORTSUMMARYVIEW);
    }

    /**
     * Create an aliased <code>public.shiftreportsummaryview</code> table
     * reference
     */
    public Shiftreportsummaryview(Name alias) {
        this(alias, SHIFTREPORTSUMMARYVIEW);
    }

    /**
     * Create a <code>public.shiftreportsummaryview</code> table reference
     */
    public Shiftreportsummaryview() {
        this(DSL.name("shiftreportsummaryview"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Shiftreportsummaryview as(String alias) {
        return new Shiftreportsummaryview(DSL.name(alias), this);
    }

    @Override
    public Shiftreportsummaryview as(Name alias) {
        return new Shiftreportsummaryview(alias, this);
    }

    @Override
    public Shiftreportsummaryview as(Table<?> alias) {
        return new Shiftreportsummaryview(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public Shiftreportsummaryview rename(String name) {
        return new Shiftreportsummaryview(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Shiftreportsummaryview rename(Name name) {
        return new Shiftreportsummaryview(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public Shiftreportsummaryview rename(Table<?> name) {
        return new Shiftreportsummaryview(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Shiftreportsummaryview where(Condition condition) {
        return new Shiftreportsummaryview(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Shiftreportsummaryview where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Shiftreportsummaryview where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Shiftreportsummaryview where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public Shiftreportsummaryview where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public Shiftreportsummaryview where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public Shiftreportsummaryview where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public Shiftreportsummaryview where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Shiftreportsummaryview whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public Shiftreportsummaryview whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
