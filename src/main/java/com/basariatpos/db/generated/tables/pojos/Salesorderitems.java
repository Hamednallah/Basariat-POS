/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Salesorderitems implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer soItemId;
    private Integer salesOrderId;
    private Integer inventoryItemId;
    private Integer serviceProductId;
    private String description;
    private Integer quantity;
    private BigDecimal unitPrice;
    private BigDecimal itemSubtotal;
    private JSONB prescriptionDetails;
    private Boolean isCustomLenses;
    private Boolean isRestockedOnAbandonment;

    public Salesorderitems() {}

    public Salesorderitems(Salesorderitems value) {
        this.soItemId = value.soItemId;
        this.salesOrderId = value.salesOrderId;
        this.inventoryItemId = value.inventoryItemId;
        this.serviceProductId = value.serviceProductId;
        this.description = value.description;
        this.quantity = value.quantity;
        this.unitPrice = value.unitPrice;
        this.itemSubtotal = value.itemSubtotal;
        this.prescriptionDetails = value.prescriptionDetails;
        this.isCustomLenses = value.isCustomLenses;
        this.isRestockedOnAbandonment = value.isRestockedOnAbandonment;
    }

    public Salesorderitems(
        Integer soItemId,
        Integer salesOrderId,
        Integer inventoryItemId,
        Integer serviceProductId,
        String description,
        Integer quantity,
        BigDecimal unitPrice,
        BigDecimal itemSubtotal,
        JSONB prescriptionDetails,
        Boolean isCustomLenses,
        Boolean isRestockedOnAbandonment
    ) {
        this.soItemId = soItemId;
        this.salesOrderId = salesOrderId;
        this.inventoryItemId = inventoryItemId;
        this.serviceProductId = serviceProductId;
        this.description = description;
        this.quantity = quantity;
        this.unitPrice = unitPrice;
        this.itemSubtotal = itemSubtotal;
        this.prescriptionDetails = prescriptionDetails;
        this.isCustomLenses = isCustomLenses;
        this.isRestockedOnAbandonment = isRestockedOnAbandonment;
    }

    /**
     * Getter for <code>public.salesorderitems.so_item_id</code>.
     */
    public Integer getSoItemId() {
        return this.soItemId;
    }

    /**
     * Setter for <code>public.salesorderitems.so_item_id</code>.
     */
    public void setSoItemId(Integer soItemId) {
        this.soItemId = soItemId;
    }

    /**
     * Getter for <code>public.salesorderitems.sales_order_id</code>.
     */
    public Integer getSalesOrderId() {
        return this.salesOrderId;
    }

    /**
     * Setter for <code>public.salesorderitems.sales_order_id</code>.
     */
    public void setSalesOrderId(Integer salesOrderId) {
        this.salesOrderId = salesOrderId;
    }

    /**
     * Getter for <code>public.salesorderitems.inventory_item_id</code>.
     */
    public Integer getInventoryItemId() {
        return this.inventoryItemId;
    }

    /**
     * Setter for <code>public.salesorderitems.inventory_item_id</code>.
     */
    public void setInventoryItemId(Integer inventoryItemId) {
        this.inventoryItemId = inventoryItemId;
    }

    /**
     * Getter for <code>public.salesorderitems.service_product_id</code>.
     */
    public Integer getServiceProductId() {
        return this.serviceProductId;
    }

    /**
     * Setter for <code>public.salesorderitems.service_product_id</code>.
     */
    public void setServiceProductId(Integer serviceProductId) {
        this.serviceProductId = serviceProductId;
    }

    /**
     * Getter for <code>public.salesorderitems.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>public.salesorderitems.description</code>.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>public.salesorderitems.quantity</code>.
     */
    public Integer getQuantity() {
        return this.quantity;
    }

    /**
     * Setter for <code>public.salesorderitems.quantity</code>.
     */
    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    /**
     * Getter for <code>public.salesorderitems.unit_price</code>.
     */
    public BigDecimal getUnitPrice() {
        return this.unitPrice;
    }

    /**
     * Setter for <code>public.salesorderitems.unit_price</code>.
     */
    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    /**
     * Getter for <code>public.salesorderitems.item_subtotal</code>.
     */
    public BigDecimal getItemSubtotal() {
        return this.itemSubtotal;
    }

    /**
     * Setter for <code>public.salesorderitems.item_subtotal</code>.
     */
    public void setItemSubtotal(BigDecimal itemSubtotal) {
        this.itemSubtotal = itemSubtotal;
    }

    /**
     * Getter for <code>public.salesorderitems.prescription_details</code>.
     */
    public JSONB getPrescriptionDetails() {
        return this.prescriptionDetails;
    }

    /**
     * Setter for <code>public.salesorderitems.prescription_details</code>.
     */
    public void setPrescriptionDetails(JSONB prescriptionDetails) {
        this.prescriptionDetails = prescriptionDetails;
    }

    /**
     * Getter for <code>public.salesorderitems.is_custom_lenses</code>.
     */
    public Boolean getIsCustomLenses() {
        return this.isCustomLenses;
    }

    /**
     * Setter for <code>public.salesorderitems.is_custom_lenses</code>.
     */
    public void setIsCustomLenses(Boolean isCustomLenses) {
        this.isCustomLenses = isCustomLenses;
    }

    /**
     * Getter for
     * <code>public.salesorderitems.is_restocked_on_abandonment</code>.
     */
    public Boolean getIsRestockedOnAbandonment() {
        return this.isRestockedOnAbandonment;
    }

    /**
     * Setter for
     * <code>public.salesorderitems.is_restocked_on_abandonment</code>.
     */
    public void setIsRestockedOnAbandonment(Boolean isRestockedOnAbandonment) {
        this.isRestockedOnAbandonment = isRestockedOnAbandonment;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Salesorderitems other = (Salesorderitems) obj;
        if (this.soItemId == null) {
            if (other.soItemId != null)
                return false;
        }
        else if (!this.soItemId.equals(other.soItemId))
            return false;
        if (this.salesOrderId == null) {
            if (other.salesOrderId != null)
                return false;
        }
        else if (!this.salesOrderId.equals(other.salesOrderId))
            return false;
        if (this.inventoryItemId == null) {
            if (other.inventoryItemId != null)
                return false;
        }
        else if (!this.inventoryItemId.equals(other.inventoryItemId))
            return false;
        if (this.serviceProductId == null) {
            if (other.serviceProductId != null)
                return false;
        }
        else if (!this.serviceProductId.equals(other.serviceProductId))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.quantity == null) {
            if (other.quantity != null)
                return false;
        }
        else if (!this.quantity.equals(other.quantity))
            return false;
        if (this.unitPrice == null) {
            if (other.unitPrice != null)
                return false;
        }
        else if (!this.unitPrice.equals(other.unitPrice))
            return false;
        if (this.itemSubtotal == null) {
            if (other.itemSubtotal != null)
                return false;
        }
        else if (!this.itemSubtotal.equals(other.itemSubtotal))
            return false;
        if (this.prescriptionDetails == null) {
            if (other.prescriptionDetails != null)
                return false;
        }
        else if (!this.prescriptionDetails.equals(other.prescriptionDetails))
            return false;
        if (this.isCustomLenses == null) {
            if (other.isCustomLenses != null)
                return false;
        }
        else if (!this.isCustomLenses.equals(other.isCustomLenses))
            return false;
        if (this.isRestockedOnAbandonment == null) {
            if (other.isRestockedOnAbandonment != null)
                return false;
        }
        else if (!this.isRestockedOnAbandonment.equals(other.isRestockedOnAbandonment))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.soItemId == null) ? 0 : this.soItemId.hashCode());
        result = prime * result + ((this.salesOrderId == null) ? 0 : this.salesOrderId.hashCode());
        result = prime * result + ((this.inventoryItemId == null) ? 0 : this.inventoryItemId.hashCode());
        result = prime * result + ((this.serviceProductId == null) ? 0 : this.serviceProductId.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.quantity == null) ? 0 : this.quantity.hashCode());
        result = prime * result + ((this.unitPrice == null) ? 0 : this.unitPrice.hashCode());
        result = prime * result + ((this.itemSubtotal == null) ? 0 : this.itemSubtotal.hashCode());
        result = prime * result + ((this.prescriptionDetails == null) ? 0 : this.prescriptionDetails.hashCode());
        result = prime * result + ((this.isCustomLenses == null) ? 0 : this.isCustomLenses.hashCode());
        result = prime * result + ((this.isRestockedOnAbandonment == null) ? 0 : this.isRestockedOnAbandonment.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Salesorderitems (");

        sb.append(soItemId);
        sb.append(", ").append(salesOrderId);
        sb.append(", ").append(inventoryItemId);
        sb.append(", ").append(serviceProductId);
        sb.append(", ").append(description);
        sb.append(", ").append(quantity);
        sb.append(", ").append(unitPrice);
        sb.append(", ").append(itemSubtotal);
        sb.append(", ").append(prescriptionDetails);
        sb.append(", ").append(isCustomLenses);
        sb.append(", ").append(isRestockedOnAbandonment);

        sb.append(")");
        return sb.toString();
    }
}
