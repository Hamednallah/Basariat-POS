/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Purchaseorderitems implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer poItemId;
    private Integer purchaseOrderId;
    private Integer inventoryItemId;
    private Integer quantityOrdered;
    private Integer quantityReceived;
    private BigDecimal purchasePricePerUnit;
    private BigDecimal subtotal;

    public Purchaseorderitems() {}

    public Purchaseorderitems(Purchaseorderitems value) {
        this.poItemId = value.poItemId;
        this.purchaseOrderId = value.purchaseOrderId;
        this.inventoryItemId = value.inventoryItemId;
        this.quantityOrdered = value.quantityOrdered;
        this.quantityReceived = value.quantityReceived;
        this.purchasePricePerUnit = value.purchasePricePerUnit;
        this.subtotal = value.subtotal;
    }

    public Purchaseorderitems(
        Integer poItemId,
        Integer purchaseOrderId,
        Integer inventoryItemId,
        Integer quantityOrdered,
        Integer quantityReceived,
        BigDecimal purchasePricePerUnit,
        BigDecimal subtotal
    ) {
        this.poItemId = poItemId;
        this.purchaseOrderId = purchaseOrderId;
        this.inventoryItemId = inventoryItemId;
        this.quantityOrdered = quantityOrdered;
        this.quantityReceived = quantityReceived;
        this.purchasePricePerUnit = purchasePricePerUnit;
        this.subtotal = subtotal;
    }

    /**
     * Getter for <code>public.purchaseorderitems.po_item_id</code>.
     */
    public Integer getPoItemId() {
        return this.poItemId;
    }

    /**
     * Setter for <code>public.purchaseorderitems.po_item_id</code>.
     */
    public void setPoItemId(Integer poItemId) {
        this.poItemId = poItemId;
    }

    /**
     * Getter for <code>public.purchaseorderitems.purchase_order_id</code>.
     */
    public Integer getPurchaseOrderId() {
        return this.purchaseOrderId;
    }

    /**
     * Setter for <code>public.purchaseorderitems.purchase_order_id</code>.
     */
    public void setPurchaseOrderId(Integer purchaseOrderId) {
        this.purchaseOrderId = purchaseOrderId;
    }

    /**
     * Getter for <code>public.purchaseorderitems.inventory_item_id</code>.
     */
    public Integer getInventoryItemId() {
        return this.inventoryItemId;
    }

    /**
     * Setter for <code>public.purchaseorderitems.inventory_item_id</code>.
     */
    public void setInventoryItemId(Integer inventoryItemId) {
        this.inventoryItemId = inventoryItemId;
    }

    /**
     * Getter for <code>public.purchaseorderitems.quantity_ordered</code>.
     */
    public Integer getQuantityOrdered() {
        return this.quantityOrdered;
    }

    /**
     * Setter for <code>public.purchaseorderitems.quantity_ordered</code>.
     */
    public void setQuantityOrdered(Integer quantityOrdered) {
        this.quantityOrdered = quantityOrdered;
    }

    /**
     * Getter for <code>public.purchaseorderitems.quantity_received</code>.
     */
    public Integer getQuantityReceived() {
        return this.quantityReceived;
    }

    /**
     * Setter for <code>public.purchaseorderitems.quantity_received</code>.
     */
    public void setQuantityReceived(Integer quantityReceived) {
        this.quantityReceived = quantityReceived;
    }

    /**
     * Getter for
     * <code>public.purchaseorderitems.purchase_price_per_unit</code>.
     */
    public BigDecimal getPurchasePricePerUnit() {
        return this.purchasePricePerUnit;
    }

    /**
     * Setter for
     * <code>public.purchaseorderitems.purchase_price_per_unit</code>.
     */
    public void setPurchasePricePerUnit(BigDecimal purchasePricePerUnit) {
        this.purchasePricePerUnit = purchasePricePerUnit;
    }

    /**
     * Getter for <code>public.purchaseorderitems.subtotal</code>.
     */
    public BigDecimal getSubtotal() {
        return this.subtotal;
    }

    /**
     * Setter for <code>public.purchaseorderitems.subtotal</code>.
     */
    public void setSubtotal(BigDecimal subtotal) {
        this.subtotal = subtotal;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Purchaseorderitems other = (Purchaseorderitems) obj;
        if (this.poItemId == null) {
            if (other.poItemId != null)
                return false;
        }
        else if (!this.poItemId.equals(other.poItemId))
            return false;
        if (this.purchaseOrderId == null) {
            if (other.purchaseOrderId != null)
                return false;
        }
        else if (!this.purchaseOrderId.equals(other.purchaseOrderId))
            return false;
        if (this.inventoryItemId == null) {
            if (other.inventoryItemId != null)
                return false;
        }
        else if (!this.inventoryItemId.equals(other.inventoryItemId))
            return false;
        if (this.quantityOrdered == null) {
            if (other.quantityOrdered != null)
                return false;
        }
        else if (!this.quantityOrdered.equals(other.quantityOrdered))
            return false;
        if (this.quantityReceived == null) {
            if (other.quantityReceived != null)
                return false;
        }
        else if (!this.quantityReceived.equals(other.quantityReceived))
            return false;
        if (this.purchasePricePerUnit == null) {
            if (other.purchasePricePerUnit != null)
                return false;
        }
        else if (!this.purchasePricePerUnit.equals(other.purchasePricePerUnit))
            return false;
        if (this.subtotal == null) {
            if (other.subtotal != null)
                return false;
        }
        else if (!this.subtotal.equals(other.subtotal))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.poItemId == null) ? 0 : this.poItemId.hashCode());
        result = prime * result + ((this.purchaseOrderId == null) ? 0 : this.purchaseOrderId.hashCode());
        result = prime * result + ((this.inventoryItemId == null) ? 0 : this.inventoryItemId.hashCode());
        result = prime * result + ((this.quantityOrdered == null) ? 0 : this.quantityOrdered.hashCode());
        result = prime * result + ((this.quantityReceived == null) ? 0 : this.quantityReceived.hashCode());
        result = prime * result + ((this.purchasePricePerUnit == null) ? 0 : this.purchasePricePerUnit.hashCode());
        result = prime * result + ((this.subtotal == null) ? 0 : this.subtotal.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Purchaseorderitems (");

        sb.append(poItemId);
        sb.append(", ").append(purchaseOrderId);
        sb.append(", ").append(inventoryItemId);
        sb.append(", ").append(quantityOrdered);
        sb.append(", ").append(quantityReceived);
        sb.append(", ").append(purchasePricePerUnit);
        sb.append(", ").append(subtotal);

        sb.append(")");
        return sb.toString();
    }
}
