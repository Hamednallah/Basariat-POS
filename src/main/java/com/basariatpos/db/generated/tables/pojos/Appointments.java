/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Appointments implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer appointmentId;
    private Integer salesOrderId;
    private OffsetDateTime appointmentDatetime;
    private String status;
    private String notes;
    private Integer createdByUserId;
    private OffsetDateTime createdAt;
    private OffsetDateTime updatedAt;

    public Appointments() {}

    public Appointments(Appointments value) {
        this.appointmentId = value.appointmentId;
        this.salesOrderId = value.salesOrderId;
        this.appointmentDatetime = value.appointmentDatetime;
        this.status = value.status;
        this.notes = value.notes;
        this.createdByUserId = value.createdByUserId;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public Appointments(
        Integer appointmentId,
        Integer salesOrderId,
        OffsetDateTime appointmentDatetime,
        String status,
        String notes,
        Integer createdByUserId,
        OffsetDateTime createdAt,
        OffsetDateTime updatedAt
    ) {
        this.appointmentId = appointmentId;
        this.salesOrderId = salesOrderId;
        this.appointmentDatetime = appointmentDatetime;
        this.status = status;
        this.notes = notes;
        this.createdByUserId = createdByUserId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.appointments.appointment_id</code>.
     */
    public Integer getAppointmentId() {
        return this.appointmentId;
    }

    /**
     * Setter for <code>public.appointments.appointment_id</code>.
     */
    public void setAppointmentId(Integer appointmentId) {
        this.appointmentId = appointmentId;
    }

    /**
     * Getter for <code>public.appointments.sales_order_id</code>.
     */
    public Integer getSalesOrderId() {
        return this.salesOrderId;
    }

    /**
     * Setter for <code>public.appointments.sales_order_id</code>.
     */
    public void setSalesOrderId(Integer salesOrderId) {
        this.salesOrderId = salesOrderId;
    }

    /**
     * Getter for <code>public.appointments.appointment_datetime</code>.
     */
    public OffsetDateTime getAppointmentDatetime() {
        return this.appointmentDatetime;
    }

    /**
     * Setter for <code>public.appointments.appointment_datetime</code>.
     */
    public void setAppointmentDatetime(OffsetDateTime appointmentDatetime) {
        this.appointmentDatetime = appointmentDatetime;
    }

    /**
     * Getter for <code>public.appointments.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>public.appointments.status</code>.
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for <code>public.appointments.notes</code>.
     */
    public String getNotes() {
        return this.notes;
    }

    /**
     * Setter for <code>public.appointments.notes</code>.
     */
    public void setNotes(String notes) {
        this.notes = notes;
    }

    /**
     * Getter for <code>public.appointments.created_by_user_id</code>.
     */
    public Integer getCreatedByUserId() {
        return this.createdByUserId;
    }

    /**
     * Setter for <code>public.appointments.created_by_user_id</code>.
     */
    public void setCreatedByUserId(Integer createdByUserId) {
        this.createdByUserId = createdByUserId;
    }

    /**
     * Getter for <code>public.appointments.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.appointments.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.appointments.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.appointments.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Appointments other = (Appointments) obj;
        if (this.appointmentId == null) {
            if (other.appointmentId != null)
                return false;
        }
        else if (!this.appointmentId.equals(other.appointmentId))
            return false;
        if (this.salesOrderId == null) {
            if (other.salesOrderId != null)
                return false;
        }
        else if (!this.salesOrderId.equals(other.salesOrderId))
            return false;
        if (this.appointmentDatetime == null) {
            if (other.appointmentDatetime != null)
                return false;
        }
        else if (!this.appointmentDatetime.equals(other.appointmentDatetime))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.notes == null) {
            if (other.notes != null)
                return false;
        }
        else if (!this.notes.equals(other.notes))
            return false;
        if (this.createdByUserId == null) {
            if (other.createdByUserId != null)
                return false;
        }
        else if (!this.createdByUserId.equals(other.createdByUserId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.appointmentId == null) ? 0 : this.appointmentId.hashCode());
        result = prime * result + ((this.salesOrderId == null) ? 0 : this.salesOrderId.hashCode());
        result = prime * result + ((this.appointmentDatetime == null) ? 0 : this.appointmentDatetime.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.notes == null) ? 0 : this.notes.hashCode());
        result = prime * result + ((this.createdByUserId == null) ? 0 : this.createdByUserId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Appointments (");

        sb.append(appointmentId);
        sb.append(", ").append(salesOrderId);
        sb.append(", ").append(appointmentDatetime);
        sb.append(", ").append(status);
        sb.append(", ").append(notes);
        sb.append(", ").append(createdByUserId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
