/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Shifts implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer shiftId;
    private Integer startedByUserId;
    private OffsetDateTime startTime;
    private OffsetDateTime endTime;
    private String status;
    private BigDecimal openingFloat;
    private BigDecimal closingCashCounted;
    private BigDecimal expectedCashInDrawer;
    private BigDecimal cashVariance;
    private String notes;
    private OffsetDateTime createdAt;
    private OffsetDateTime updatedAt;

    public Shifts() {}

    public Shifts(Shifts value) {
        this.shiftId = value.shiftId;
        this.startedByUserId = value.startedByUserId;
        this.startTime = value.startTime;
        this.endTime = value.endTime;
        this.status = value.status;
        this.openingFloat = value.openingFloat;
        this.closingCashCounted = value.closingCashCounted;
        this.expectedCashInDrawer = value.expectedCashInDrawer;
        this.cashVariance = value.cashVariance;
        this.notes = value.notes;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public Shifts(
        Integer shiftId,
        Integer startedByUserId,
        OffsetDateTime startTime,
        OffsetDateTime endTime,
        String status,
        BigDecimal openingFloat,
        BigDecimal closingCashCounted,
        BigDecimal expectedCashInDrawer,
        BigDecimal cashVariance,
        String notes,
        OffsetDateTime createdAt,
        OffsetDateTime updatedAt
    ) {
        this.shiftId = shiftId;
        this.startedByUserId = startedByUserId;
        this.startTime = startTime;
        this.endTime = endTime;
        this.status = status;
        this.openingFloat = openingFloat;
        this.closingCashCounted = closingCashCounted;
        this.expectedCashInDrawer = expectedCashInDrawer;
        this.cashVariance = cashVariance;
        this.notes = notes;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.shifts.shift_id</code>.
     */
    public Integer getShiftId() {
        return this.shiftId;
    }

    /**
     * Setter for <code>public.shifts.shift_id</code>.
     */
    public void setShiftId(Integer shiftId) {
        this.shiftId = shiftId;
    }

    /**
     * Getter for <code>public.shifts.started_by_user_id</code>.
     */
    public Integer getStartedByUserId() {
        return this.startedByUserId;
    }

    /**
     * Setter for <code>public.shifts.started_by_user_id</code>.
     */
    public void setStartedByUserId(Integer startedByUserId) {
        this.startedByUserId = startedByUserId;
    }

    /**
     * Getter for <code>public.shifts.start_time</code>.
     */
    public OffsetDateTime getStartTime() {
        return this.startTime;
    }

    /**
     * Setter for <code>public.shifts.start_time</code>.
     */
    public void setStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
    }

    /**
     * Getter for <code>public.shifts.end_time</code>.
     */
    public OffsetDateTime getEndTime() {
        return this.endTime;
    }

    /**
     * Setter for <code>public.shifts.end_time</code>.
     */
    public void setEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
    }

    /**
     * Getter for <code>public.shifts.status</code>.
     */
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>public.shifts.status</code>.
     */
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for <code>public.shifts.opening_float</code>.
     */
    public BigDecimal getOpeningFloat() {
        return this.openingFloat;
    }

    /**
     * Setter for <code>public.shifts.opening_float</code>.
     */
    public void setOpeningFloat(BigDecimal openingFloat) {
        this.openingFloat = openingFloat;
    }

    /**
     * Getter for <code>public.shifts.closing_cash_counted</code>.
     */
    public BigDecimal getClosingCashCounted() {
        return this.closingCashCounted;
    }

    /**
     * Setter for <code>public.shifts.closing_cash_counted</code>.
     */
    public void setClosingCashCounted(BigDecimal closingCashCounted) {
        this.closingCashCounted = closingCashCounted;
    }

    /**
     * Getter for <code>public.shifts.expected_cash_in_drawer</code>.
     */
    public BigDecimal getExpectedCashInDrawer() {
        return this.expectedCashInDrawer;
    }

    /**
     * Setter for <code>public.shifts.expected_cash_in_drawer</code>.
     */
    public void setExpectedCashInDrawer(BigDecimal expectedCashInDrawer) {
        this.expectedCashInDrawer = expectedCashInDrawer;
    }

    /**
     * Getter for <code>public.shifts.cash_variance</code>.
     */
    public BigDecimal getCashVariance() {
        return this.cashVariance;
    }

    /**
     * Setter for <code>public.shifts.cash_variance</code>.
     */
    public void setCashVariance(BigDecimal cashVariance) {
        this.cashVariance = cashVariance;
    }

    /**
     * Getter for <code>public.shifts.notes</code>.
     */
    public String getNotes() {
        return this.notes;
    }

    /**
     * Setter for <code>public.shifts.notes</code>.
     */
    public void setNotes(String notes) {
        this.notes = notes;
    }

    /**
     * Getter for <code>public.shifts.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.shifts.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.shifts.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.shifts.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Shifts other = (Shifts) obj;
        if (this.shiftId == null) {
            if (other.shiftId != null)
                return false;
        }
        else if (!this.shiftId.equals(other.shiftId))
            return false;
        if (this.startedByUserId == null) {
            if (other.startedByUserId != null)
                return false;
        }
        else if (!this.startedByUserId.equals(other.startedByUserId))
            return false;
        if (this.startTime == null) {
            if (other.startTime != null)
                return false;
        }
        else if (!this.startTime.equals(other.startTime))
            return false;
        if (this.endTime == null) {
            if (other.endTime != null)
                return false;
        }
        else if (!this.endTime.equals(other.endTime))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.openingFloat == null) {
            if (other.openingFloat != null)
                return false;
        }
        else if (!this.openingFloat.equals(other.openingFloat))
            return false;
        if (this.closingCashCounted == null) {
            if (other.closingCashCounted != null)
                return false;
        }
        else if (!this.closingCashCounted.equals(other.closingCashCounted))
            return false;
        if (this.expectedCashInDrawer == null) {
            if (other.expectedCashInDrawer != null)
                return false;
        }
        else if (!this.expectedCashInDrawer.equals(other.expectedCashInDrawer))
            return false;
        if (this.cashVariance == null) {
            if (other.cashVariance != null)
                return false;
        }
        else if (!this.cashVariance.equals(other.cashVariance))
            return false;
        if (this.notes == null) {
            if (other.notes != null)
                return false;
        }
        else if (!this.notes.equals(other.notes))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.shiftId == null) ? 0 : this.shiftId.hashCode());
        result = prime * result + ((this.startedByUserId == null) ? 0 : this.startedByUserId.hashCode());
        result = prime * result + ((this.startTime == null) ? 0 : this.startTime.hashCode());
        result = prime * result + ((this.endTime == null) ? 0 : this.endTime.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.openingFloat == null) ? 0 : this.openingFloat.hashCode());
        result = prime * result + ((this.closingCashCounted == null) ? 0 : this.closingCashCounted.hashCode());
        result = prime * result + ((this.expectedCashInDrawer == null) ? 0 : this.expectedCashInDrawer.hashCode());
        result = prime * result + ((this.cashVariance == null) ? 0 : this.cashVariance.hashCode());
        result = prime * result + ((this.notes == null) ? 0 : this.notes.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Shifts (");

        sb.append(shiftId);
        sb.append(", ").append(startedByUserId);
        sb.append(", ").append(startTime);
        sb.append(", ").append(endTime);
        sb.append(", ").append(status);
        sb.append(", ").append(openingFloat);
        sb.append(", ").append(closingCashCounted);
        sb.append(", ").append(expectedCashInDrawer);
        sb.append(", ").append(cashVariance);
        sb.append(", ").append(notes);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
