/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Opticaldiagnostics implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer diagnosticId;
    private Integer patientId;
    private LocalDate diagnosticDate;
    private Boolean isContactLensRx;
    private String contactLensDetails;
    private BigDecimal odSphDist;
    private BigDecimal odCylDist;
    private Integer odAxisDist;
    private BigDecimal osSphDist;
    private BigDecimal osCylDist;
    private Integer osAxisDist;
    private BigDecimal odAdd;
    private BigDecimal osAdd;
    private BigDecimal ipd;
    private String remarks;
    private Integer createdByUserId;
    private OffsetDateTime createdAt;

    public Opticaldiagnostics() {}

    public Opticaldiagnostics(Opticaldiagnostics value) {
        this.diagnosticId = value.diagnosticId;
        this.patientId = value.patientId;
        this.diagnosticDate = value.diagnosticDate;
        this.isContactLensRx = value.isContactLensRx;
        this.contactLensDetails = value.contactLensDetails;
        this.odSphDist = value.odSphDist;
        this.odCylDist = value.odCylDist;
        this.odAxisDist = value.odAxisDist;
        this.osSphDist = value.osSphDist;
        this.osCylDist = value.osCylDist;
        this.osAxisDist = value.osAxisDist;
        this.odAdd = value.odAdd;
        this.osAdd = value.osAdd;
        this.ipd = value.ipd;
        this.remarks = value.remarks;
        this.createdByUserId = value.createdByUserId;
        this.createdAt = value.createdAt;
    }

    public Opticaldiagnostics(
        Integer diagnosticId,
        Integer patientId,
        LocalDate diagnosticDate,
        Boolean isContactLensRx,
        String contactLensDetails,
        BigDecimal odSphDist,
        BigDecimal odCylDist,
        Integer odAxisDist,
        BigDecimal osSphDist,
        BigDecimal osCylDist,
        Integer osAxisDist,
        BigDecimal odAdd,
        BigDecimal osAdd,
        BigDecimal ipd,
        String remarks,
        Integer createdByUserId,
        OffsetDateTime createdAt
    ) {
        this.diagnosticId = diagnosticId;
        this.patientId = patientId;
        this.diagnosticDate = diagnosticDate;
        this.isContactLensRx = isContactLensRx;
        this.contactLensDetails = contactLensDetails;
        this.odSphDist = odSphDist;
        this.odCylDist = odCylDist;
        this.odAxisDist = odAxisDist;
        this.osSphDist = osSphDist;
        this.osCylDist = osCylDist;
        this.osAxisDist = osAxisDist;
        this.odAdd = odAdd;
        this.osAdd = osAdd;
        this.ipd = ipd;
        this.remarks = remarks;
        this.createdByUserId = createdByUserId;
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.diagnostic_id</code>.
     */
    public Integer getDiagnosticId() {
        return this.diagnosticId;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.diagnostic_id</code>.
     */
    public void setDiagnosticId(Integer diagnosticId) {
        this.diagnosticId = diagnosticId;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.patient_id</code>.
     */
    public Integer getPatientId() {
        return this.patientId;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.patient_id</code>.
     */
    public void setPatientId(Integer patientId) {
        this.patientId = patientId;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.diagnostic_date</code>.
     */
    public LocalDate getDiagnosticDate() {
        return this.diagnosticDate;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.diagnostic_date</code>.
     */
    public void setDiagnosticDate(LocalDate diagnosticDate) {
        this.diagnosticDate = diagnosticDate;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.is_contact_lens_rx</code>.
     */
    public Boolean getIsContactLensRx() {
        return this.isContactLensRx;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.is_contact_lens_rx</code>.
     */
    public void setIsContactLensRx(Boolean isContactLensRx) {
        this.isContactLensRx = isContactLensRx;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.contact_lens_details</code>.
     */
    public String getContactLensDetails() {
        return this.contactLensDetails;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.contact_lens_details</code>.
     */
    public void setContactLensDetails(String contactLensDetails) {
        this.contactLensDetails = contactLensDetails;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.od_sph_dist</code>.
     */
    public BigDecimal getOdSphDist() {
        return this.odSphDist;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.od_sph_dist</code>.
     */
    public void setOdSphDist(BigDecimal odSphDist) {
        this.odSphDist = odSphDist;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.od_cyl_dist</code>.
     */
    public BigDecimal getOdCylDist() {
        return this.odCylDist;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.od_cyl_dist</code>.
     */
    public void setOdCylDist(BigDecimal odCylDist) {
        this.odCylDist = odCylDist;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.od_axis_dist</code>.
     */
    public Integer getOdAxisDist() {
        return this.odAxisDist;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.od_axis_dist</code>.
     */
    public void setOdAxisDist(Integer odAxisDist) {
        this.odAxisDist = odAxisDist;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.os_sph_dist</code>.
     */
    public BigDecimal getOsSphDist() {
        return this.osSphDist;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.os_sph_dist</code>.
     */
    public void setOsSphDist(BigDecimal osSphDist) {
        this.osSphDist = osSphDist;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.os_cyl_dist</code>.
     */
    public BigDecimal getOsCylDist() {
        return this.osCylDist;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.os_cyl_dist</code>.
     */
    public void setOsCylDist(BigDecimal osCylDist) {
        this.osCylDist = osCylDist;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.os_axis_dist</code>.
     */
    public Integer getOsAxisDist() {
        return this.osAxisDist;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.os_axis_dist</code>.
     */
    public void setOsAxisDist(Integer osAxisDist) {
        this.osAxisDist = osAxisDist;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.od_add</code>.
     */
    public BigDecimal getOdAdd() {
        return this.odAdd;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.od_add</code>.
     */
    public void setOdAdd(BigDecimal odAdd) {
        this.odAdd = odAdd;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.os_add</code>.
     */
    public BigDecimal getOsAdd() {
        return this.osAdd;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.os_add</code>.
     */
    public void setOsAdd(BigDecimal osAdd) {
        this.osAdd = osAdd;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.ipd</code>.
     */
    public BigDecimal getIpd() {
        return this.ipd;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.ipd</code>.
     */
    public void setIpd(BigDecimal ipd) {
        this.ipd = ipd;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.remarks</code>.
     */
    public String getRemarks() {
        return this.remarks;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.remarks</code>.
     */
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.created_by_user_id</code>.
     */
    public Integer getCreatedByUserId() {
        return this.createdByUserId;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.created_by_user_id</code>.
     */
    public void setCreatedByUserId(Integer createdByUserId) {
        this.createdByUserId = createdByUserId;
    }

    /**
     * Getter for <code>public.opticaldiagnostics.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.opticaldiagnostics.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Opticaldiagnostics other = (Opticaldiagnostics) obj;
        if (this.diagnosticId == null) {
            if (other.diagnosticId != null)
                return false;
        }
        else if (!this.diagnosticId.equals(other.diagnosticId))
            return false;
        if (this.patientId == null) {
            if (other.patientId != null)
                return false;
        }
        else if (!this.patientId.equals(other.patientId))
            return false;
        if (this.diagnosticDate == null) {
            if (other.diagnosticDate != null)
                return false;
        }
        else if (!this.diagnosticDate.equals(other.diagnosticDate))
            return false;
        if (this.isContactLensRx == null) {
            if (other.isContactLensRx != null)
                return false;
        }
        else if (!this.isContactLensRx.equals(other.isContactLensRx))
            return false;
        if (this.contactLensDetails == null) {
            if (other.contactLensDetails != null)
                return false;
        }
        else if (!this.contactLensDetails.equals(other.contactLensDetails))
            return false;
        if (this.odSphDist == null) {
            if (other.odSphDist != null)
                return false;
        }
        else if (!this.odSphDist.equals(other.odSphDist))
            return false;
        if (this.odCylDist == null) {
            if (other.odCylDist != null)
                return false;
        }
        else if (!this.odCylDist.equals(other.odCylDist))
            return false;
        if (this.odAxisDist == null) {
            if (other.odAxisDist != null)
                return false;
        }
        else if (!this.odAxisDist.equals(other.odAxisDist))
            return false;
        if (this.osSphDist == null) {
            if (other.osSphDist != null)
                return false;
        }
        else if (!this.osSphDist.equals(other.osSphDist))
            return false;
        if (this.osCylDist == null) {
            if (other.osCylDist != null)
                return false;
        }
        else if (!this.osCylDist.equals(other.osCylDist))
            return false;
        if (this.osAxisDist == null) {
            if (other.osAxisDist != null)
                return false;
        }
        else if (!this.osAxisDist.equals(other.osAxisDist))
            return false;
        if (this.odAdd == null) {
            if (other.odAdd != null)
                return false;
        }
        else if (!this.odAdd.equals(other.odAdd))
            return false;
        if (this.osAdd == null) {
            if (other.osAdd != null)
                return false;
        }
        else if (!this.osAdd.equals(other.osAdd))
            return false;
        if (this.ipd == null) {
            if (other.ipd != null)
                return false;
        }
        else if (!this.ipd.equals(other.ipd))
            return false;
        if (this.remarks == null) {
            if (other.remarks != null)
                return false;
        }
        else if (!this.remarks.equals(other.remarks))
            return false;
        if (this.createdByUserId == null) {
            if (other.createdByUserId != null)
                return false;
        }
        else if (!this.createdByUserId.equals(other.createdByUserId))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.diagnosticId == null) ? 0 : this.diagnosticId.hashCode());
        result = prime * result + ((this.patientId == null) ? 0 : this.patientId.hashCode());
        result = prime * result + ((this.diagnosticDate == null) ? 0 : this.diagnosticDate.hashCode());
        result = prime * result + ((this.isContactLensRx == null) ? 0 : this.isContactLensRx.hashCode());
        result = prime * result + ((this.contactLensDetails == null) ? 0 : this.contactLensDetails.hashCode());
        result = prime * result + ((this.odSphDist == null) ? 0 : this.odSphDist.hashCode());
        result = prime * result + ((this.odCylDist == null) ? 0 : this.odCylDist.hashCode());
        result = prime * result + ((this.odAxisDist == null) ? 0 : this.odAxisDist.hashCode());
        result = prime * result + ((this.osSphDist == null) ? 0 : this.osSphDist.hashCode());
        result = prime * result + ((this.osCylDist == null) ? 0 : this.osCylDist.hashCode());
        result = prime * result + ((this.osAxisDist == null) ? 0 : this.osAxisDist.hashCode());
        result = prime * result + ((this.odAdd == null) ? 0 : this.odAdd.hashCode());
        result = prime * result + ((this.osAdd == null) ? 0 : this.osAdd.hashCode());
        result = prime * result + ((this.ipd == null) ? 0 : this.ipd.hashCode());
        result = prime * result + ((this.remarks == null) ? 0 : this.remarks.hashCode());
        result = prime * result + ((this.createdByUserId == null) ? 0 : this.createdByUserId.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Opticaldiagnostics (");

        sb.append(diagnosticId);
        sb.append(", ").append(patientId);
        sb.append(", ").append(diagnosticDate);
        sb.append(", ").append(isContactLensRx);
        sb.append(", ").append(contactLensDetails);
        sb.append(", ").append(odSphDist);
        sb.append(", ").append(odCylDist);
        sb.append(", ").append(odAxisDist);
        sb.append(", ").append(osSphDist);
        sb.append(", ").append(osCylDist);
        sb.append(", ").append(osAxisDist);
        sb.append(", ").append(odAdd);
        sb.append(", ").append(osAdd);
        sb.append(", ").append(ipd);
        sb.append(", ").append(remarks);
        sb.append(", ").append(createdByUserId);
        sb.append(", ").append(createdAt);

        sb.append(")");
        return sb.toString();
    }
}
