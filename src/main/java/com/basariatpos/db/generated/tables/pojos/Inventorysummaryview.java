/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Inventorysummaryview implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer inventoryItemId;
    private String productCode;
    private String productNameEn;
    private String productNameAr;
    private String categoryNameEn;
    private String categoryNameAr;
    private String brandName;
    private String itemSpecificNameEn;
    private String itemSpecificNameAr;
    private JSONB attributes;
    private Integer quantityOnHand;
    private BigDecimal sellingPrice;
    private BigDecimal costPrice;
    private BigDecimal totalCostValue;
    private BigDecimal totalSellingValue;
    private Integer minStockLevel;
    private String unitOfMeasure;
    private Boolean isActive;

    public Inventorysummaryview() {}

    public Inventorysummaryview(Inventorysummaryview value) {
        this.inventoryItemId = value.inventoryItemId;
        this.productCode = value.productCode;
        this.productNameEn = value.productNameEn;
        this.productNameAr = value.productNameAr;
        this.categoryNameEn = value.categoryNameEn;
        this.categoryNameAr = value.categoryNameAr;
        this.brandName = value.brandName;
        this.itemSpecificNameEn = value.itemSpecificNameEn;
        this.itemSpecificNameAr = value.itemSpecificNameAr;
        this.attributes = value.attributes;
        this.quantityOnHand = value.quantityOnHand;
        this.sellingPrice = value.sellingPrice;
        this.costPrice = value.costPrice;
        this.totalCostValue = value.totalCostValue;
        this.totalSellingValue = value.totalSellingValue;
        this.minStockLevel = value.minStockLevel;
        this.unitOfMeasure = value.unitOfMeasure;
        this.isActive = value.isActive;
    }

    public Inventorysummaryview(
        Integer inventoryItemId,
        String productCode,
        String productNameEn,
        String productNameAr,
        String categoryNameEn,
        String categoryNameAr,
        String brandName,
        String itemSpecificNameEn,
        String itemSpecificNameAr,
        JSONB attributes,
        Integer quantityOnHand,
        BigDecimal sellingPrice,
        BigDecimal costPrice,
        BigDecimal totalCostValue,
        BigDecimal totalSellingValue,
        Integer minStockLevel,
        String unitOfMeasure,
        Boolean isActive
    ) {
        this.inventoryItemId = inventoryItemId;
        this.productCode = productCode;
        this.productNameEn = productNameEn;
        this.productNameAr = productNameAr;
        this.categoryNameEn = categoryNameEn;
        this.categoryNameAr = categoryNameAr;
        this.brandName = brandName;
        this.itemSpecificNameEn = itemSpecificNameEn;
        this.itemSpecificNameAr = itemSpecificNameAr;
        this.attributes = attributes;
        this.quantityOnHand = quantityOnHand;
        this.sellingPrice = sellingPrice;
        this.costPrice = costPrice;
        this.totalCostValue = totalCostValue;
        this.totalSellingValue = totalSellingValue;
        this.minStockLevel = minStockLevel;
        this.unitOfMeasure = unitOfMeasure;
        this.isActive = isActive;
    }

    /**
     * Getter for <code>public.inventorysummaryview.inventory_item_id</code>.
     */
    public Integer getInventoryItemId() {
        return this.inventoryItemId;
    }

    /**
     * Setter for <code>public.inventorysummaryview.inventory_item_id</code>.
     */
    public void setInventoryItemId(Integer inventoryItemId) {
        this.inventoryItemId = inventoryItemId;
    }

    /**
     * Getter for <code>public.inventorysummaryview.product_code</code>.
     */
    public String getProductCode() {
        return this.productCode;
    }

    /**
     * Setter for <code>public.inventorysummaryview.product_code</code>.
     */
    public void setProductCode(String productCode) {
        this.productCode = productCode;
    }

    /**
     * Getter for <code>public.inventorysummaryview.product_name_en</code>.
     */
    public String getProductNameEn() {
        return this.productNameEn;
    }

    /**
     * Setter for <code>public.inventorysummaryview.product_name_en</code>.
     */
    public void setProductNameEn(String productNameEn) {
        this.productNameEn = productNameEn;
    }

    /**
     * Getter for <code>public.inventorysummaryview.product_name_ar</code>.
     */
    public String getProductNameAr() {
        return this.productNameAr;
    }

    /**
     * Setter for <code>public.inventorysummaryview.product_name_ar</code>.
     */
    public void setProductNameAr(String productNameAr) {
        this.productNameAr = productNameAr;
    }

    /**
     * Getter for <code>public.inventorysummaryview.category_name_en</code>.
     */
    public String getCategoryNameEn() {
        return this.categoryNameEn;
    }

    /**
     * Setter for <code>public.inventorysummaryview.category_name_en</code>.
     */
    public void setCategoryNameEn(String categoryNameEn) {
        this.categoryNameEn = categoryNameEn;
    }

    /**
     * Getter for <code>public.inventorysummaryview.category_name_ar</code>.
     */
    public String getCategoryNameAr() {
        return this.categoryNameAr;
    }

    /**
     * Setter for <code>public.inventorysummaryview.category_name_ar</code>.
     */
    public void setCategoryNameAr(String categoryNameAr) {
        this.categoryNameAr = categoryNameAr;
    }

    /**
     * Getter for <code>public.inventorysummaryview.brand_name</code>.
     */
    public String getBrandName() {
        return this.brandName;
    }

    /**
     * Setter for <code>public.inventorysummaryview.brand_name</code>.
     */
    public void setBrandName(String brandName) {
        this.brandName = brandName;
    }

    /**
     * Getter for
     * <code>public.inventorysummaryview.item_specific_name_en</code>.
     */
    public String getItemSpecificNameEn() {
        return this.itemSpecificNameEn;
    }

    /**
     * Setter for
     * <code>public.inventorysummaryview.item_specific_name_en</code>.
     */
    public void setItemSpecificNameEn(String itemSpecificNameEn) {
        this.itemSpecificNameEn = itemSpecificNameEn;
    }

    /**
     * Getter for
     * <code>public.inventorysummaryview.item_specific_name_ar</code>.
     */
    public String getItemSpecificNameAr() {
        return this.itemSpecificNameAr;
    }

    /**
     * Setter for
     * <code>public.inventorysummaryview.item_specific_name_ar</code>.
     */
    public void setItemSpecificNameAr(String itemSpecificNameAr) {
        this.itemSpecificNameAr = itemSpecificNameAr;
    }

    /**
     * Getter for <code>public.inventorysummaryview.attributes</code>.
     */
    public JSONB getAttributes() {
        return this.attributes;
    }

    /**
     * Setter for <code>public.inventorysummaryview.attributes</code>.
     */
    public void setAttributes(JSONB attributes) {
        this.attributes = attributes;
    }

    /**
     * Getter for <code>public.inventorysummaryview.quantity_on_hand</code>.
     */
    public Integer getQuantityOnHand() {
        return this.quantityOnHand;
    }

    /**
     * Setter for <code>public.inventorysummaryview.quantity_on_hand</code>.
     */
    public void setQuantityOnHand(Integer quantityOnHand) {
        this.quantityOnHand = quantityOnHand;
    }

    /**
     * Getter for <code>public.inventorysummaryview.selling_price</code>.
     */
    public BigDecimal getSellingPrice() {
        return this.sellingPrice;
    }

    /**
     * Setter for <code>public.inventorysummaryview.selling_price</code>.
     */
    public void setSellingPrice(BigDecimal sellingPrice) {
        this.sellingPrice = sellingPrice;
    }

    /**
     * Getter for <code>public.inventorysummaryview.cost_price</code>.
     */
    public BigDecimal getCostPrice() {
        return this.costPrice;
    }

    /**
     * Setter for <code>public.inventorysummaryview.cost_price</code>.
     */
    public void setCostPrice(BigDecimal costPrice) {
        this.costPrice = costPrice;
    }

    /**
     * Getter for <code>public.inventorysummaryview.total_cost_value</code>.
     */
    public BigDecimal getTotalCostValue() {
        return this.totalCostValue;
    }

    /**
     * Setter for <code>public.inventorysummaryview.total_cost_value</code>.
     */
    public void setTotalCostValue(BigDecimal totalCostValue) {
        this.totalCostValue = totalCostValue;
    }

    /**
     * Getter for <code>public.inventorysummaryview.total_selling_value</code>.
     */
    public BigDecimal getTotalSellingValue() {
        return this.totalSellingValue;
    }

    /**
     * Setter for <code>public.inventorysummaryview.total_selling_value</code>.
     */
    public void setTotalSellingValue(BigDecimal totalSellingValue) {
        this.totalSellingValue = totalSellingValue;
    }

    /**
     * Getter for <code>public.inventorysummaryview.min_stock_level</code>.
     */
    public Integer getMinStockLevel() {
        return this.minStockLevel;
    }

    /**
     * Setter for <code>public.inventorysummaryview.min_stock_level</code>.
     */
    public void setMinStockLevel(Integer minStockLevel) {
        this.minStockLevel = minStockLevel;
    }

    /**
     * Getter for <code>public.inventorysummaryview.unit_of_measure</code>.
     */
    public String getUnitOfMeasure() {
        return this.unitOfMeasure;
    }

    /**
     * Setter for <code>public.inventorysummaryview.unit_of_measure</code>.
     */
    public void setUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
    }

    /**
     * Getter for <code>public.inventorysummaryview.is_active</code>.
     */
    public Boolean getIsActive() {
        return this.isActive;
    }

    /**
     * Setter for <code>public.inventorysummaryview.is_active</code>.
     */
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Inventorysummaryview other = (Inventorysummaryview) obj;
        if (this.inventoryItemId == null) {
            if (other.inventoryItemId != null)
                return false;
        }
        else if (!this.inventoryItemId.equals(other.inventoryItemId))
            return false;
        if (this.productCode == null) {
            if (other.productCode != null)
                return false;
        }
        else if (!this.productCode.equals(other.productCode))
            return false;
        if (this.productNameEn == null) {
            if (other.productNameEn != null)
                return false;
        }
        else if (!this.productNameEn.equals(other.productNameEn))
            return false;
        if (this.productNameAr == null) {
            if (other.productNameAr != null)
                return false;
        }
        else if (!this.productNameAr.equals(other.productNameAr))
            return false;
        if (this.categoryNameEn == null) {
            if (other.categoryNameEn != null)
                return false;
        }
        else if (!this.categoryNameEn.equals(other.categoryNameEn))
            return false;
        if (this.categoryNameAr == null) {
            if (other.categoryNameAr != null)
                return false;
        }
        else if (!this.categoryNameAr.equals(other.categoryNameAr))
            return false;
        if (this.brandName == null) {
            if (other.brandName != null)
                return false;
        }
        else if (!this.brandName.equals(other.brandName))
            return false;
        if (this.itemSpecificNameEn == null) {
            if (other.itemSpecificNameEn != null)
                return false;
        }
        else if (!this.itemSpecificNameEn.equals(other.itemSpecificNameEn))
            return false;
        if (this.itemSpecificNameAr == null) {
            if (other.itemSpecificNameAr != null)
                return false;
        }
        else if (!this.itemSpecificNameAr.equals(other.itemSpecificNameAr))
            return false;
        if (this.attributes == null) {
            if (other.attributes != null)
                return false;
        }
        else if (!this.attributes.equals(other.attributes))
            return false;
        if (this.quantityOnHand == null) {
            if (other.quantityOnHand != null)
                return false;
        }
        else if (!this.quantityOnHand.equals(other.quantityOnHand))
            return false;
        if (this.sellingPrice == null) {
            if (other.sellingPrice != null)
                return false;
        }
        else if (!this.sellingPrice.equals(other.sellingPrice))
            return false;
        if (this.costPrice == null) {
            if (other.costPrice != null)
                return false;
        }
        else if (!this.costPrice.equals(other.costPrice))
            return false;
        if (this.totalCostValue == null) {
            if (other.totalCostValue != null)
                return false;
        }
        else if (!this.totalCostValue.equals(other.totalCostValue))
            return false;
        if (this.totalSellingValue == null) {
            if (other.totalSellingValue != null)
                return false;
        }
        else if (!this.totalSellingValue.equals(other.totalSellingValue))
            return false;
        if (this.minStockLevel == null) {
            if (other.minStockLevel != null)
                return false;
        }
        else if (!this.minStockLevel.equals(other.minStockLevel))
            return false;
        if (this.unitOfMeasure == null) {
            if (other.unitOfMeasure != null)
                return false;
        }
        else if (!this.unitOfMeasure.equals(other.unitOfMeasure))
            return false;
        if (this.isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!this.isActive.equals(other.isActive))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.inventoryItemId == null) ? 0 : this.inventoryItemId.hashCode());
        result = prime * result + ((this.productCode == null) ? 0 : this.productCode.hashCode());
        result = prime * result + ((this.productNameEn == null) ? 0 : this.productNameEn.hashCode());
        result = prime * result + ((this.productNameAr == null) ? 0 : this.productNameAr.hashCode());
        result = prime * result + ((this.categoryNameEn == null) ? 0 : this.categoryNameEn.hashCode());
        result = prime * result + ((this.categoryNameAr == null) ? 0 : this.categoryNameAr.hashCode());
        result = prime * result + ((this.brandName == null) ? 0 : this.brandName.hashCode());
        result = prime * result + ((this.itemSpecificNameEn == null) ? 0 : this.itemSpecificNameEn.hashCode());
        result = prime * result + ((this.itemSpecificNameAr == null) ? 0 : this.itemSpecificNameAr.hashCode());
        result = prime * result + ((this.attributes == null) ? 0 : this.attributes.hashCode());
        result = prime * result + ((this.quantityOnHand == null) ? 0 : this.quantityOnHand.hashCode());
        result = prime * result + ((this.sellingPrice == null) ? 0 : this.sellingPrice.hashCode());
        result = prime * result + ((this.costPrice == null) ? 0 : this.costPrice.hashCode());
        result = prime * result + ((this.totalCostValue == null) ? 0 : this.totalCostValue.hashCode());
        result = prime * result + ((this.totalSellingValue == null) ? 0 : this.totalSellingValue.hashCode());
        result = prime * result + ((this.minStockLevel == null) ? 0 : this.minStockLevel.hashCode());
        result = prime * result + ((this.unitOfMeasure == null) ? 0 : this.unitOfMeasure.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Inventorysummaryview (");

        sb.append(inventoryItemId);
        sb.append(", ").append(productCode);
        sb.append(", ").append(productNameEn);
        sb.append(", ").append(productNameAr);
        sb.append(", ").append(categoryNameEn);
        sb.append(", ").append(categoryNameAr);
        sb.append(", ").append(brandName);
        sb.append(", ").append(itemSpecificNameEn);
        sb.append(", ").append(itemSpecificNameAr);
        sb.append(", ").append(attributes);
        sb.append(", ").append(quantityOnHand);
        sb.append(", ").append(sellingPrice);
        sb.append(", ").append(costPrice);
        sb.append(", ").append(totalCostValue);
        sb.append(", ").append(totalSellingValue);
        sb.append(", ").append(minStockLevel);
        sb.append(", ").append(unitOfMeasure);
        sb.append(", ").append(isActive);

        sb.append(")");
        return sb.toString();
    }
}
