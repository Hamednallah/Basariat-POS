/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.records;


import com.basariatpos.db.generated.tables.Payments;

import java.math.BigDecimal;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PaymentsRecord extends UpdatableRecordImpl<PaymentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.payments.payment_id</code>.
     */
    public void setPaymentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.payments.payment_id</code>.
     */
    public Integer getPaymentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.payments.sales_order_id</code>.
     */
    public void setSalesOrderId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.payments.sales_order_id</code>.
     */
    public Integer getSalesOrderId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.payments.payment_date</code>.
     */
    public void setPaymentDate(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.payments.payment_date</code>.
     */
    public OffsetDateTime getPaymentDate() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.payments.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.payments.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.payments.payment_method</code>.
     */
    public void setPaymentMethod(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.payments.payment_method</code>.
     */
    public String getPaymentMethod() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.payments.bank_name_id</code>.
     */
    public void setBankNameId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.payments.bank_name_id</code>.
     */
    public Integer getBankNameId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.payments.transaction_id</code>.
     */
    public void setTransactionId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.payments.transaction_id</code>.
     */
    public String getTransactionId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.payments.received_by_user_id</code>.
     */
    public void setReceivedByUserId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.payments.received_by_user_id</code>.
     */
    public Integer getReceivedByUserId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.payments.shift_id</code>.
     */
    public void setShiftId(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.payments.shift_id</code>.
     */
    public Integer getShiftId() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.payments.notes</code>.
     */
    public void setNotes(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.payments.notes</code>.
     */
    public String getNotes() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PaymentsRecord
     */
    public PaymentsRecord() {
        super(Payments.PAYMENTS);
    }

    /**
     * Create a detached, initialised PaymentsRecord
     */
    public PaymentsRecord(Integer paymentId, Integer salesOrderId, OffsetDateTime paymentDate, BigDecimal amount, String paymentMethod, Integer bankNameId, String transactionId, Integer receivedByUserId, Integer shiftId, String notes) {
        super(Payments.PAYMENTS);

        setPaymentId(paymentId);
        setSalesOrderId(salesOrderId);
        setPaymentDate(paymentDate);
        setAmount(amount);
        setPaymentMethod(paymentMethod);
        setBankNameId(bankNameId);
        setTransactionId(transactionId);
        setReceivedByUserId(receivedByUserId);
        setShiftId(shiftId);
        setNotes(notes);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PaymentsRecord
     */
    public PaymentsRecord(com.basariatpos.db.generated.tables.pojos.Payments value) {
        super(Payments.PAYMENTS);

        if (value != null) {
            setPaymentId(value.getPaymentId());
            setSalesOrderId(value.getSalesOrderId());
            setPaymentDate(value.getPaymentDate());
            setAmount(value.getAmount());
            setPaymentMethod(value.getPaymentMethod());
            setBankNameId(value.getBankNameId());
            setTransactionId(value.getTransactionId());
            setReceivedByUserId(value.getReceivedByUserId());
            setShiftId(value.getShiftId());
            setNotes(value.getNotes());
            resetChangedOnNotNull();
        }
    }
}
