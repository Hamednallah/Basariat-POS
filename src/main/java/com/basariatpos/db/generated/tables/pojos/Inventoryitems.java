/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.OffsetDateTime;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Inventoryitems implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer inventoryItemId;
    private Integer productId;
    private String brandName;
    private String itemSpecificNameEn;
    private String itemSpecificNameAr;
    private JSONB attributes;
    private Integer quantityOnHand;
    private BigDecimal sellingPrice;
    private BigDecimal costPrice;
    private Integer minStockLevel;
    private String unitOfMeasure;
    private Boolean isActive;
    private OffsetDateTime createdAt;
    private OffsetDateTime updatedAt;

    public Inventoryitems() {}

    public Inventoryitems(Inventoryitems value) {
        this.inventoryItemId = value.inventoryItemId;
        this.productId = value.productId;
        this.brandName = value.brandName;
        this.itemSpecificNameEn = value.itemSpecificNameEn;
        this.itemSpecificNameAr = value.itemSpecificNameAr;
        this.attributes = value.attributes;
        this.quantityOnHand = value.quantityOnHand;
        this.sellingPrice = value.sellingPrice;
        this.costPrice = value.costPrice;
        this.minStockLevel = value.minStockLevel;
        this.unitOfMeasure = value.unitOfMeasure;
        this.isActive = value.isActive;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public Inventoryitems(
        Integer inventoryItemId,
        Integer productId,
        String brandName,
        String itemSpecificNameEn,
        String itemSpecificNameAr,
        JSONB attributes,
        Integer quantityOnHand,
        BigDecimal sellingPrice,
        BigDecimal costPrice,
        Integer minStockLevel,
        String unitOfMeasure,
        Boolean isActive,
        OffsetDateTime createdAt,
        OffsetDateTime updatedAt
    ) {
        this.inventoryItemId = inventoryItemId;
        this.productId = productId;
        this.brandName = brandName;
        this.itemSpecificNameEn = itemSpecificNameEn;
        this.itemSpecificNameAr = itemSpecificNameAr;
        this.attributes = attributes;
        this.quantityOnHand = quantityOnHand;
        this.sellingPrice = sellingPrice;
        this.costPrice = costPrice;
        this.minStockLevel = minStockLevel;
        this.unitOfMeasure = unitOfMeasure;
        this.isActive = isActive;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.inventoryitems.inventory_item_id</code>.
     */
    public Integer getInventoryItemId() {
        return this.inventoryItemId;
    }

    /**
     * Setter for <code>public.inventoryitems.inventory_item_id</code>.
     */
    public void setInventoryItemId(Integer inventoryItemId) {
        this.inventoryItemId = inventoryItemId;
    }

    /**
     * Getter for <code>public.inventoryitems.product_id</code>.
     */
    public Integer getProductId() {
        return this.productId;
    }

    /**
     * Setter for <code>public.inventoryitems.product_id</code>.
     */
    public void setProductId(Integer productId) {
        this.productId = productId;
    }

    /**
     * Getter for <code>public.inventoryitems.brand_name</code>.
     */
    public String getBrandName() {
        return this.brandName;
    }

    /**
     * Setter for <code>public.inventoryitems.brand_name</code>.
     */
    public void setBrandName(String brandName) {
        this.brandName = brandName;
    }

    /**
     * Getter for <code>public.inventoryitems.item_specific_name_en</code>.
     */
    public String getItemSpecificNameEn() {
        return this.itemSpecificNameEn;
    }

    /**
     * Setter for <code>public.inventoryitems.item_specific_name_en</code>.
     */
    public void setItemSpecificNameEn(String itemSpecificNameEn) {
        this.itemSpecificNameEn = itemSpecificNameEn;
    }

    /**
     * Getter for <code>public.inventoryitems.item_specific_name_ar</code>.
     */
    public String getItemSpecificNameAr() {
        return this.itemSpecificNameAr;
    }

    /**
     * Setter for <code>public.inventoryitems.item_specific_name_ar</code>.
     */
    public void setItemSpecificNameAr(String itemSpecificNameAr) {
        this.itemSpecificNameAr = itemSpecificNameAr;
    }

    /**
     * Getter for <code>public.inventoryitems.attributes</code>.
     */
    public JSONB getAttributes() {
        return this.attributes;
    }

    /**
     * Setter for <code>public.inventoryitems.attributes</code>.
     */
    public void setAttributes(JSONB attributes) {
        this.attributes = attributes;
    }

    /**
     * Getter for <code>public.inventoryitems.quantity_on_hand</code>.
     */
    public Integer getQuantityOnHand() {
        return this.quantityOnHand;
    }

    /**
     * Setter for <code>public.inventoryitems.quantity_on_hand</code>.
     */
    public void setQuantityOnHand(Integer quantityOnHand) {
        this.quantityOnHand = quantityOnHand;
    }

    /**
     * Getter for <code>public.inventoryitems.selling_price</code>.
     */
    public BigDecimal getSellingPrice() {
        return this.sellingPrice;
    }

    /**
     * Setter for <code>public.inventoryitems.selling_price</code>.
     */
    public void setSellingPrice(BigDecimal sellingPrice) {
        this.sellingPrice = sellingPrice;
    }

    /**
     * Getter for <code>public.inventoryitems.cost_price</code>.
     */
    public BigDecimal getCostPrice() {
        return this.costPrice;
    }

    /**
     * Setter for <code>public.inventoryitems.cost_price</code>.
     */
    public void setCostPrice(BigDecimal costPrice) {
        this.costPrice = costPrice;
    }

    /**
     * Getter for <code>public.inventoryitems.min_stock_level</code>.
     */
    public Integer getMinStockLevel() {
        return this.minStockLevel;
    }

    /**
     * Setter for <code>public.inventoryitems.min_stock_level</code>.
     */
    public void setMinStockLevel(Integer minStockLevel) {
        this.minStockLevel = minStockLevel;
    }

    /**
     * Getter for <code>public.inventoryitems.unit_of_measure</code>.
     */
    public String getUnitOfMeasure() {
        return this.unitOfMeasure;
    }

    /**
     * Setter for <code>public.inventoryitems.unit_of_measure</code>.
     */
    public void setUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
    }

    /**
     * Getter for <code>public.inventoryitems.is_active</code>.
     */
    public Boolean getIsActive() {
        return this.isActive;
    }

    /**
     * Setter for <code>public.inventoryitems.is_active</code>.
     */
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    /**
     * Getter for <code>public.inventoryitems.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.inventoryitems.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.inventoryitems.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.inventoryitems.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Inventoryitems other = (Inventoryitems) obj;
        if (this.inventoryItemId == null) {
            if (other.inventoryItemId != null)
                return false;
        }
        else if (!this.inventoryItemId.equals(other.inventoryItemId))
            return false;
        if (this.productId == null) {
            if (other.productId != null)
                return false;
        }
        else if (!this.productId.equals(other.productId))
            return false;
        if (this.brandName == null) {
            if (other.brandName != null)
                return false;
        }
        else if (!this.brandName.equals(other.brandName))
            return false;
        if (this.itemSpecificNameEn == null) {
            if (other.itemSpecificNameEn != null)
                return false;
        }
        else if (!this.itemSpecificNameEn.equals(other.itemSpecificNameEn))
            return false;
        if (this.itemSpecificNameAr == null) {
            if (other.itemSpecificNameAr != null)
                return false;
        }
        else if (!this.itemSpecificNameAr.equals(other.itemSpecificNameAr))
            return false;
        if (this.attributes == null) {
            if (other.attributes != null)
                return false;
        }
        else if (!this.attributes.equals(other.attributes))
            return false;
        if (this.quantityOnHand == null) {
            if (other.quantityOnHand != null)
                return false;
        }
        else if (!this.quantityOnHand.equals(other.quantityOnHand))
            return false;
        if (this.sellingPrice == null) {
            if (other.sellingPrice != null)
                return false;
        }
        else if (!this.sellingPrice.equals(other.sellingPrice))
            return false;
        if (this.costPrice == null) {
            if (other.costPrice != null)
                return false;
        }
        else if (!this.costPrice.equals(other.costPrice))
            return false;
        if (this.minStockLevel == null) {
            if (other.minStockLevel != null)
                return false;
        }
        else if (!this.minStockLevel.equals(other.minStockLevel))
            return false;
        if (this.unitOfMeasure == null) {
            if (other.unitOfMeasure != null)
                return false;
        }
        else if (!this.unitOfMeasure.equals(other.unitOfMeasure))
            return false;
        if (this.isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!this.isActive.equals(other.isActive))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.inventoryItemId == null) ? 0 : this.inventoryItemId.hashCode());
        result = prime * result + ((this.productId == null) ? 0 : this.productId.hashCode());
        result = prime * result + ((this.brandName == null) ? 0 : this.brandName.hashCode());
        result = prime * result + ((this.itemSpecificNameEn == null) ? 0 : this.itemSpecificNameEn.hashCode());
        result = prime * result + ((this.itemSpecificNameAr == null) ? 0 : this.itemSpecificNameAr.hashCode());
        result = prime * result + ((this.attributes == null) ? 0 : this.attributes.hashCode());
        result = prime * result + ((this.quantityOnHand == null) ? 0 : this.quantityOnHand.hashCode());
        result = prime * result + ((this.sellingPrice == null) ? 0 : this.sellingPrice.hashCode());
        result = prime * result + ((this.costPrice == null) ? 0 : this.costPrice.hashCode());
        result = prime * result + ((this.minStockLevel == null) ? 0 : this.minStockLevel.hashCode());
        result = prime * result + ((this.unitOfMeasure == null) ? 0 : this.unitOfMeasure.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Inventoryitems (");

        sb.append(inventoryItemId);
        sb.append(", ").append(productId);
        sb.append(", ").append(brandName);
        sb.append(", ").append(itemSpecificNameEn);
        sb.append(", ").append(itemSpecificNameAr);
        sb.append(", ").append(attributes);
        sb.append(", ").append(quantityOnHand);
        sb.append(", ").append(sellingPrice);
        sb.append(", ").append(costPrice);
        sb.append(", ").append(minStockLevel);
        sb.append(", ").append(unitOfMeasure);
        sb.append(", ").append(isActive);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
