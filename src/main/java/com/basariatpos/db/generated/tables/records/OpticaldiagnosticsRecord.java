/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.records;


import com.basariatpos.db.generated.tables.Opticaldiagnostics;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class OpticaldiagnosticsRecord extends UpdatableRecordImpl<OpticaldiagnosticsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.opticaldiagnostics.diagnostic_id</code>.
     */
    public void setDiagnosticId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.diagnostic_id</code>.
     */
    public Integer getDiagnosticId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.patient_id</code>.
     */
    public void setPatientId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.patient_id</code>.
     */
    public Integer getPatientId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.diagnostic_date</code>.
     */
    public void setDiagnosticDate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.diagnostic_date</code>.
     */
    public LocalDate getDiagnosticDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.is_contact_lens_rx</code>.
     */
    public void setIsContactLensRx(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.is_contact_lens_rx</code>.
     */
    public Boolean getIsContactLensRx() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.contact_lens_details</code>.
     */
    public void setContactLensDetails(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.contact_lens_details</code>.
     */
    public String getContactLensDetails() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.od_sph_dist</code>.
     */
    public void setOdSphDist(BigDecimal value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.od_sph_dist</code>.
     */
    public BigDecimal getOdSphDist() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.od_cyl_dist</code>.
     */
    public void setOdCylDist(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.od_cyl_dist</code>.
     */
    public BigDecimal getOdCylDist() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.od_axis_dist</code>.
     */
    public void setOdAxisDist(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.od_axis_dist</code>.
     */
    public Integer getOdAxisDist() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.os_sph_dist</code>.
     */
    public void setOsSphDist(BigDecimal value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.os_sph_dist</code>.
     */
    public BigDecimal getOsSphDist() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.os_cyl_dist</code>.
     */
    public void setOsCylDist(BigDecimal value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.os_cyl_dist</code>.
     */
    public BigDecimal getOsCylDist() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.os_axis_dist</code>.
     */
    public void setOsAxisDist(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.os_axis_dist</code>.
     */
    public Integer getOsAxisDist() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.od_add</code>.
     */
    public void setOdAdd(BigDecimal value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.od_add</code>.
     */
    public BigDecimal getOdAdd() {
        return (BigDecimal) get(11);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.os_add</code>.
     */
    public void setOsAdd(BigDecimal value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.os_add</code>.
     */
    public BigDecimal getOsAdd() {
        return (BigDecimal) get(12);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.ipd</code>.
     */
    public void setIpd(BigDecimal value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.ipd</code>.
     */
    public BigDecimal getIpd() {
        return (BigDecimal) get(13);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.remarks</code>.
     */
    public void setRemarks(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.remarks</code>.
     */
    public String getRemarks() {
        return (String) get(14);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.created_by_user_id</code>.
     */
    public void setCreatedByUserId(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.created_by_user_id</code>.
     */
    public Integer getCreatedByUserId() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>public.opticaldiagnostics.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.opticaldiagnostics.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OpticaldiagnosticsRecord
     */
    public OpticaldiagnosticsRecord() {
        super(Opticaldiagnostics.OPTICALDIAGNOSTICS);
    }

    /**
     * Create a detached, initialised OpticaldiagnosticsRecord
     */
    public OpticaldiagnosticsRecord(Integer diagnosticId, Integer patientId, LocalDate diagnosticDate, Boolean isContactLensRx, String contactLensDetails, BigDecimal odSphDist, BigDecimal odCylDist, Integer odAxisDist, BigDecimal osSphDist, BigDecimal osCylDist, Integer osAxisDist, BigDecimal odAdd, BigDecimal osAdd, BigDecimal ipd, String remarks, Integer createdByUserId, OffsetDateTime createdAt) {
        super(Opticaldiagnostics.OPTICALDIAGNOSTICS);

        setDiagnosticId(diagnosticId);
        setPatientId(patientId);
        setDiagnosticDate(diagnosticDate);
        setIsContactLensRx(isContactLensRx);
        setContactLensDetails(contactLensDetails);
        setOdSphDist(odSphDist);
        setOdCylDist(odCylDist);
        setOdAxisDist(odAxisDist);
        setOsSphDist(osSphDist);
        setOsCylDist(osCylDist);
        setOsAxisDist(osAxisDist);
        setOdAdd(odAdd);
        setOsAdd(osAdd);
        setIpd(ipd);
        setRemarks(remarks);
        setCreatedByUserId(createdByUserId);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OpticaldiagnosticsRecord
     */
    public OpticaldiagnosticsRecord(com.basariatpos.db.generated.tables.pojos.Opticaldiagnostics value) {
        super(Opticaldiagnostics.OPTICALDIAGNOSTICS);

        if (value != null) {
            setDiagnosticId(value.getDiagnosticId());
            setPatientId(value.getPatientId());
            setDiagnosticDate(value.getDiagnosticDate());
            setIsContactLensRx(value.getIsContactLensRx());
            setContactLensDetails(value.getContactLensDetails());
            setOdSphDist(value.getOdSphDist());
            setOdCylDist(value.getOdCylDist());
            setOdAxisDist(value.getOdAxisDist());
            setOsSphDist(value.getOsSphDist());
            setOsCylDist(value.getOsCylDist());
            setOsAxisDist(value.getOsAxisDist());
            setOdAdd(value.getOdAdd());
            setOsAdd(value.getOsAdd());
            setIpd(value.getIpd());
            setRemarks(value.getRemarks());
            setCreatedByUserId(value.getCreatedByUserId());
            setCreatedAt(value.getCreatedAt());
            resetChangedOnNotNull();
        }
    }
}
