/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.records;


import com.basariatpos.db.generated.tables.Products;

import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ProductsRecord extends UpdatableRecordImpl<ProductsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.products.product_id</code>.
     */
    public void setProductId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.products.product_id</code>.
     */
    public Integer getProductId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.products.product_code</code>.
     */
    public void setProductCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.products.product_code</code>.
     */
    public String getProductCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.products.product_name_en</code>.
     */
    public void setProductNameEn(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.products.product_name_en</code>.
     */
    public String getProductNameEn() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.products.product_name_ar</code>.
     */
    public void setProductNameAr(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.products.product_name_ar</code>.
     */
    public String getProductNameAr() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.products.category_id</code>.
     */
    public void setCategoryId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.products.category_id</code>.
     */
    public Integer getCategoryId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.products.description_en</code>.
     */
    public void setDescriptionEn(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.products.description_en</code>.
     */
    public String getDescriptionEn() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.products.description_ar</code>.
     */
    public void setDescriptionAr(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.products.description_ar</code>.
     */
    public String getDescriptionAr() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.products.is_service</code>.
     */
    public void setIsService(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.products.is_service</code>.
     */
    public Boolean getIsService() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.products.is_stock_item</code>.
     */
    public void setIsStockItem(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.products.is_stock_item</code>.
     */
    public Boolean getIsStockItem() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.products.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.products.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(9);
    }

    /**
     * Setter for <code>public.products.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.products.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductsRecord
     */
    public ProductsRecord() {
        super(Products.PRODUCTS);
    }

    /**
     * Create a detached, initialised ProductsRecord
     */
    public ProductsRecord(Integer productId, String productCode, String productNameEn, String productNameAr, Integer categoryId, String descriptionEn, String descriptionAr, Boolean isService, Boolean isStockItem, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(Products.PRODUCTS);

        setProductId(productId);
        setProductCode(productCode);
        setProductNameEn(productNameEn);
        setProductNameAr(productNameAr);
        setCategoryId(categoryId);
        setDescriptionEn(descriptionEn);
        setDescriptionAr(descriptionAr);
        setIsService(isService);
        setIsStockItem(isStockItem);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ProductsRecord
     */
    public ProductsRecord(com.basariatpos.db.generated.tables.pojos.Products value) {
        super(Products.PRODUCTS);

        if (value != null) {
            setProductId(value.getProductId());
            setProductCode(value.getProductCode());
            setProductNameEn(value.getProductNameEn());
            setProductNameAr(value.getProductNameAr());
            setCategoryId(value.getCategoryId());
            setDescriptionEn(value.getDescriptionEn());
            setDescriptionAr(value.getDescriptionAr());
            setIsService(value.getIsService());
            setIsStockItem(value.getIsStockItem());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
