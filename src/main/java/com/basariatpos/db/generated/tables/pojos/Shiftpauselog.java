/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Shiftpauselog implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer shiftPauseLogId;
    private Integer shiftId;
    private OffsetDateTime pausedAt;
    private OffsetDateTime resumedAt;
    private Integer pausedByUserId;

    public Shiftpauselog() {}

    public Shiftpauselog(Shiftpauselog value) {
        this.shiftPauseLogId = value.shiftPauseLogId;
        this.shiftId = value.shiftId;
        this.pausedAt = value.pausedAt;
        this.resumedAt = value.resumedAt;
        this.pausedByUserId = value.pausedByUserId;
    }

    public Shiftpauselog(
        Integer shiftPauseLogId,
        Integer shiftId,
        OffsetDateTime pausedAt,
        OffsetDateTime resumedAt,
        Integer pausedByUserId
    ) {
        this.shiftPauseLogId = shiftPauseLogId;
        this.shiftId = shiftId;
        this.pausedAt = pausedAt;
        this.resumedAt = resumedAt;
        this.pausedByUserId = pausedByUserId;
    }

    /**
     * Getter for <code>public.shiftpauselog.shift_pause_log_id</code>.
     */
    public Integer getShiftPauseLogId() {
        return this.shiftPauseLogId;
    }

    /**
     * Setter for <code>public.shiftpauselog.shift_pause_log_id</code>.
     */
    public void setShiftPauseLogId(Integer shiftPauseLogId) {
        this.shiftPauseLogId = shiftPauseLogId;
    }

    /**
     * Getter for <code>public.shiftpauselog.shift_id</code>.
     */
    public Integer getShiftId() {
        return this.shiftId;
    }

    /**
     * Setter for <code>public.shiftpauselog.shift_id</code>.
     */
    public void setShiftId(Integer shiftId) {
        this.shiftId = shiftId;
    }

    /**
     * Getter for <code>public.shiftpauselog.paused_at</code>.
     */
    public OffsetDateTime getPausedAt() {
        return this.pausedAt;
    }

    /**
     * Setter for <code>public.shiftpauselog.paused_at</code>.
     */
    public void setPausedAt(OffsetDateTime pausedAt) {
        this.pausedAt = pausedAt;
    }

    /**
     * Getter for <code>public.shiftpauselog.resumed_at</code>.
     */
    public OffsetDateTime getResumedAt() {
        return this.resumedAt;
    }

    /**
     * Setter for <code>public.shiftpauselog.resumed_at</code>.
     */
    public void setResumedAt(OffsetDateTime resumedAt) {
        this.resumedAt = resumedAt;
    }

    /**
     * Getter for <code>public.shiftpauselog.paused_by_user_id</code>.
     */
    public Integer getPausedByUserId() {
        return this.pausedByUserId;
    }

    /**
     * Setter for <code>public.shiftpauselog.paused_by_user_id</code>.
     */
    public void setPausedByUserId(Integer pausedByUserId) {
        this.pausedByUserId = pausedByUserId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Shiftpauselog other = (Shiftpauselog) obj;
        if (this.shiftPauseLogId == null) {
            if (other.shiftPauseLogId != null)
                return false;
        }
        else if (!this.shiftPauseLogId.equals(other.shiftPauseLogId))
            return false;
        if (this.shiftId == null) {
            if (other.shiftId != null)
                return false;
        }
        else if (!this.shiftId.equals(other.shiftId))
            return false;
        if (this.pausedAt == null) {
            if (other.pausedAt != null)
                return false;
        }
        else if (!this.pausedAt.equals(other.pausedAt))
            return false;
        if (this.resumedAt == null) {
            if (other.resumedAt != null)
                return false;
        }
        else if (!this.resumedAt.equals(other.resumedAt))
            return false;
        if (this.pausedByUserId == null) {
            if (other.pausedByUserId != null)
                return false;
        }
        else if (!this.pausedByUserId.equals(other.pausedByUserId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.shiftPauseLogId == null) ? 0 : this.shiftPauseLogId.hashCode());
        result = prime * result + ((this.shiftId == null) ? 0 : this.shiftId.hashCode());
        result = prime * result + ((this.pausedAt == null) ? 0 : this.pausedAt.hashCode());
        result = prime * result + ((this.resumedAt == null) ? 0 : this.resumedAt.hashCode());
        result = prime * result + ((this.pausedByUserId == null) ? 0 : this.pausedByUserId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Shiftpauselog (");

        sb.append(shiftPauseLogId);
        sb.append(", ").append(shiftId);
        sb.append(", ").append(pausedAt);
        sb.append(", ").append(resumedAt);
        sb.append(", ").append(pausedByUserId);

        sb.append(")");
        return sb.toString();
    }
}
