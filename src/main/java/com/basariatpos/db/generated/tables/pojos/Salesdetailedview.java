/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.OffsetDateTime;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Salesdetailedview implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer salesOrderId;
    private OffsetDateTime orderDate;
    private String systemPatientId;
    private String patientName;
    private String createdByUser;
    private Integer shiftId;
    private String shiftUser;
    private String orderStatus;
    private Integer soItemId;
    private String itemDescription;
    private String masterProductNameEn;
    private String masterProductNameAr;
    private String categoryEn;
    private String categoryAr;
    private Integer quantity;
    private BigDecimal unitPrice;
    private BigDecimal itemSubtotal;
    private String brandName;
    private JSONB itemAttributes;
    private BigDecimal itemCostPrice;
    private BigDecimal itemProfitOnItem;
    private BigDecimal orderSubtotal;
    private BigDecimal orderDiscount;
    private BigDecimal orderTotal;
    private BigDecimal orderAmountPaid;
    private BigDecimal orderBalanceDue;

    public Salesdetailedview() {}

    public Salesdetailedview(Salesdetailedview value) {
        this.salesOrderId = value.salesOrderId;
        this.orderDate = value.orderDate;
        this.systemPatientId = value.systemPatientId;
        this.patientName = value.patientName;
        this.createdByUser = value.createdByUser;
        this.shiftId = value.shiftId;
        this.shiftUser = value.shiftUser;
        this.orderStatus = value.orderStatus;
        this.soItemId = value.soItemId;
        this.itemDescription = value.itemDescription;
        this.masterProductNameEn = value.masterProductNameEn;
        this.masterProductNameAr = value.masterProductNameAr;
        this.categoryEn = value.categoryEn;
        this.categoryAr = value.categoryAr;
        this.quantity = value.quantity;
        this.unitPrice = value.unitPrice;
        this.itemSubtotal = value.itemSubtotal;
        this.brandName = value.brandName;
        this.itemAttributes = value.itemAttributes;
        this.itemCostPrice = value.itemCostPrice;
        this.itemProfitOnItem = value.itemProfitOnItem;
        this.orderSubtotal = value.orderSubtotal;
        this.orderDiscount = value.orderDiscount;
        this.orderTotal = value.orderTotal;
        this.orderAmountPaid = value.orderAmountPaid;
        this.orderBalanceDue = value.orderBalanceDue;
    }

    public Salesdetailedview(
        Integer salesOrderId,
        OffsetDateTime orderDate,
        String systemPatientId,
        String patientName,
        String createdByUser,
        Integer shiftId,
        String shiftUser,
        String orderStatus,
        Integer soItemId,
        String itemDescription,
        String masterProductNameEn,
        String masterProductNameAr,
        String categoryEn,
        String categoryAr,
        Integer quantity,
        BigDecimal unitPrice,
        BigDecimal itemSubtotal,
        String brandName,
        JSONB itemAttributes,
        BigDecimal itemCostPrice,
        BigDecimal itemProfitOnItem,
        BigDecimal orderSubtotal,
        BigDecimal orderDiscount,
        BigDecimal orderTotal,
        BigDecimal orderAmountPaid,
        BigDecimal orderBalanceDue
    ) {
        this.salesOrderId = salesOrderId;
        this.orderDate = orderDate;
        this.systemPatientId = systemPatientId;
        this.patientName = patientName;
        this.createdByUser = createdByUser;
        this.shiftId = shiftId;
        this.shiftUser = shiftUser;
        this.orderStatus = orderStatus;
        this.soItemId = soItemId;
        this.itemDescription = itemDescription;
        this.masterProductNameEn = masterProductNameEn;
        this.masterProductNameAr = masterProductNameAr;
        this.categoryEn = categoryEn;
        this.categoryAr = categoryAr;
        this.quantity = quantity;
        this.unitPrice = unitPrice;
        this.itemSubtotal = itemSubtotal;
        this.brandName = brandName;
        this.itemAttributes = itemAttributes;
        this.itemCostPrice = itemCostPrice;
        this.itemProfitOnItem = itemProfitOnItem;
        this.orderSubtotal = orderSubtotal;
        this.orderDiscount = orderDiscount;
        this.orderTotal = orderTotal;
        this.orderAmountPaid = orderAmountPaid;
        this.orderBalanceDue = orderBalanceDue;
    }

    /**
     * Getter for <code>public.salesdetailedview.sales_order_id</code>.
     */
    public Integer getSalesOrderId() {
        return this.salesOrderId;
    }

    /**
     * Setter for <code>public.salesdetailedview.sales_order_id</code>.
     */
    public void setSalesOrderId(Integer salesOrderId) {
        this.salesOrderId = salesOrderId;
    }

    /**
     * Getter for <code>public.salesdetailedview.order_date</code>.
     */
    public OffsetDateTime getOrderDate() {
        return this.orderDate;
    }

    /**
     * Setter for <code>public.salesdetailedview.order_date</code>.
     */
    public void setOrderDate(OffsetDateTime orderDate) {
        this.orderDate = orderDate;
    }

    /**
     * Getter for <code>public.salesdetailedview.system_patient_id</code>.
     */
    public String getSystemPatientId() {
        return this.systemPatientId;
    }

    /**
     * Setter for <code>public.salesdetailedview.system_patient_id</code>.
     */
    public void setSystemPatientId(String systemPatientId) {
        this.systemPatientId = systemPatientId;
    }

    /**
     * Getter for <code>public.salesdetailedview.patient_name</code>.
     */
    public String getPatientName() {
        return this.patientName;
    }

    /**
     * Setter for <code>public.salesdetailedview.patient_name</code>.
     */
    public void setPatientName(String patientName) {
        this.patientName = patientName;
    }

    /**
     * Getter for <code>public.salesdetailedview.created_by_user</code>.
     */
    public String getCreatedByUser() {
        return this.createdByUser;
    }

    /**
     * Setter for <code>public.salesdetailedview.created_by_user</code>.
     */
    public void setCreatedByUser(String createdByUser) {
        this.createdByUser = createdByUser;
    }

    /**
     * Getter for <code>public.salesdetailedview.shift_id</code>.
     */
    public Integer getShiftId() {
        return this.shiftId;
    }

    /**
     * Setter for <code>public.salesdetailedview.shift_id</code>.
     */
    public void setShiftId(Integer shiftId) {
        this.shiftId = shiftId;
    }

    /**
     * Getter for <code>public.salesdetailedview.shift_user</code>.
     */
    public String getShiftUser() {
        return this.shiftUser;
    }

    /**
     * Setter for <code>public.salesdetailedview.shift_user</code>.
     */
    public void setShiftUser(String shiftUser) {
        this.shiftUser = shiftUser;
    }

    /**
     * Getter for <code>public.salesdetailedview.order_status</code>.
     */
    public String getOrderStatus() {
        return this.orderStatus;
    }

    /**
     * Setter for <code>public.salesdetailedview.order_status</code>.
     */
    public void setOrderStatus(String orderStatus) {
        this.orderStatus = orderStatus;
    }

    /**
     * Getter for <code>public.salesdetailedview.so_item_id</code>.
     */
    public Integer getSoItemId() {
        return this.soItemId;
    }

    /**
     * Setter for <code>public.salesdetailedview.so_item_id</code>.
     */
    public void setSoItemId(Integer soItemId) {
        this.soItemId = soItemId;
    }

    /**
     * Getter for <code>public.salesdetailedview.item_description</code>.
     */
    public String getItemDescription() {
        return this.itemDescription;
    }

    /**
     * Setter for <code>public.salesdetailedview.item_description</code>.
     */
    public void setItemDescription(String itemDescription) {
        this.itemDescription = itemDescription;
    }

    /**
     * Getter for <code>public.salesdetailedview.master_product_name_en</code>.
     */
    public String getMasterProductNameEn() {
        return this.masterProductNameEn;
    }

    /**
     * Setter for <code>public.salesdetailedview.master_product_name_en</code>.
     */
    public void setMasterProductNameEn(String masterProductNameEn) {
        this.masterProductNameEn = masterProductNameEn;
    }

    /**
     * Getter for <code>public.salesdetailedview.master_product_name_ar</code>.
     */
    public String getMasterProductNameAr() {
        return this.masterProductNameAr;
    }

    /**
     * Setter for <code>public.salesdetailedview.master_product_name_ar</code>.
     */
    public void setMasterProductNameAr(String masterProductNameAr) {
        this.masterProductNameAr = masterProductNameAr;
    }

    /**
     * Getter for <code>public.salesdetailedview.category_en</code>.
     */
    public String getCategoryEn() {
        return this.categoryEn;
    }

    /**
     * Setter for <code>public.salesdetailedview.category_en</code>.
     */
    public void setCategoryEn(String categoryEn) {
        this.categoryEn = categoryEn;
    }

    /**
     * Getter for <code>public.salesdetailedview.category_ar</code>.
     */
    public String getCategoryAr() {
        return this.categoryAr;
    }

    /**
     * Setter for <code>public.salesdetailedview.category_ar</code>.
     */
    public void setCategoryAr(String categoryAr) {
        this.categoryAr = categoryAr;
    }

    /**
     * Getter for <code>public.salesdetailedview.quantity</code>.
     */
    public Integer getQuantity() {
        return this.quantity;
    }

    /**
     * Setter for <code>public.salesdetailedview.quantity</code>.
     */
    public void setQuantity(Integer quantity) {
        this.quantity = quantity;
    }

    /**
     * Getter for <code>public.salesdetailedview.unit_price</code>.
     */
    public BigDecimal getUnitPrice() {
        return this.unitPrice;
    }

    /**
     * Setter for <code>public.salesdetailedview.unit_price</code>.
     */
    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    /**
     * Getter for <code>public.salesdetailedview.item_subtotal</code>.
     */
    public BigDecimal getItemSubtotal() {
        return this.itemSubtotal;
    }

    /**
     * Setter for <code>public.salesdetailedview.item_subtotal</code>.
     */
    public void setItemSubtotal(BigDecimal itemSubtotal) {
        this.itemSubtotal = itemSubtotal;
    }

    /**
     * Getter for <code>public.salesdetailedview.brand_name</code>.
     */
    public String getBrandName() {
        return this.brandName;
    }

    /**
     * Setter for <code>public.salesdetailedview.brand_name</code>.
     */
    public void setBrandName(String brandName) {
        this.brandName = brandName;
    }

    /**
     * Getter for <code>public.salesdetailedview.item_attributes</code>.
     */
    public JSONB getItemAttributes() {
        return this.itemAttributes;
    }

    /**
     * Setter for <code>public.salesdetailedview.item_attributes</code>.
     */
    public void setItemAttributes(JSONB itemAttributes) {
        this.itemAttributes = itemAttributes;
    }

    /**
     * Getter for <code>public.salesdetailedview.item_cost_price</code>.
     */
    public BigDecimal getItemCostPrice() {
        return this.itemCostPrice;
    }

    /**
     * Setter for <code>public.salesdetailedview.item_cost_price</code>.
     */
    public void setItemCostPrice(BigDecimal itemCostPrice) {
        this.itemCostPrice = itemCostPrice;
    }

    /**
     * Getter for <code>public.salesdetailedview.item_profit_on_item</code>.
     */
    public BigDecimal getItemProfitOnItem() {
        return this.itemProfitOnItem;
    }

    /**
     * Setter for <code>public.salesdetailedview.item_profit_on_item</code>.
     */
    public void setItemProfitOnItem(BigDecimal itemProfitOnItem) {
        this.itemProfitOnItem = itemProfitOnItem;
    }

    /**
     * Getter for <code>public.salesdetailedview.order_subtotal</code>.
     */
    public BigDecimal getOrderSubtotal() {
        return this.orderSubtotal;
    }

    /**
     * Setter for <code>public.salesdetailedview.order_subtotal</code>.
     */
    public void setOrderSubtotal(BigDecimal orderSubtotal) {
        this.orderSubtotal = orderSubtotal;
    }

    /**
     * Getter for <code>public.salesdetailedview.order_discount</code>.
     */
    public BigDecimal getOrderDiscount() {
        return this.orderDiscount;
    }

    /**
     * Setter for <code>public.salesdetailedview.order_discount</code>.
     */
    public void setOrderDiscount(BigDecimal orderDiscount) {
        this.orderDiscount = orderDiscount;
    }

    /**
     * Getter for <code>public.salesdetailedview.order_total</code>.
     */
    public BigDecimal getOrderTotal() {
        return this.orderTotal;
    }

    /**
     * Setter for <code>public.salesdetailedview.order_total</code>.
     */
    public void setOrderTotal(BigDecimal orderTotal) {
        this.orderTotal = orderTotal;
    }

    /**
     * Getter for <code>public.salesdetailedview.order_amount_paid</code>.
     */
    public BigDecimal getOrderAmountPaid() {
        return this.orderAmountPaid;
    }

    /**
     * Setter for <code>public.salesdetailedview.order_amount_paid</code>.
     */
    public void setOrderAmountPaid(BigDecimal orderAmountPaid) {
        this.orderAmountPaid = orderAmountPaid;
    }

    /**
     * Getter for <code>public.salesdetailedview.order_balance_due</code>.
     */
    public BigDecimal getOrderBalanceDue() {
        return this.orderBalanceDue;
    }

    /**
     * Setter for <code>public.salesdetailedview.order_balance_due</code>.
     */
    public void setOrderBalanceDue(BigDecimal orderBalanceDue) {
        this.orderBalanceDue = orderBalanceDue;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Salesdetailedview other = (Salesdetailedview) obj;
        if (this.salesOrderId == null) {
            if (other.salesOrderId != null)
                return false;
        }
        else if (!this.salesOrderId.equals(other.salesOrderId))
            return false;
        if (this.orderDate == null) {
            if (other.orderDate != null)
                return false;
        }
        else if (!this.orderDate.equals(other.orderDate))
            return false;
        if (this.systemPatientId == null) {
            if (other.systemPatientId != null)
                return false;
        }
        else if (!this.systemPatientId.equals(other.systemPatientId))
            return false;
        if (this.patientName == null) {
            if (other.patientName != null)
                return false;
        }
        else if (!this.patientName.equals(other.patientName))
            return false;
        if (this.createdByUser == null) {
            if (other.createdByUser != null)
                return false;
        }
        else if (!this.createdByUser.equals(other.createdByUser))
            return false;
        if (this.shiftId == null) {
            if (other.shiftId != null)
                return false;
        }
        else if (!this.shiftId.equals(other.shiftId))
            return false;
        if (this.shiftUser == null) {
            if (other.shiftUser != null)
                return false;
        }
        else if (!this.shiftUser.equals(other.shiftUser))
            return false;
        if (this.orderStatus == null) {
            if (other.orderStatus != null)
                return false;
        }
        else if (!this.orderStatus.equals(other.orderStatus))
            return false;
        if (this.soItemId == null) {
            if (other.soItemId != null)
                return false;
        }
        else if (!this.soItemId.equals(other.soItemId))
            return false;
        if (this.itemDescription == null) {
            if (other.itemDescription != null)
                return false;
        }
        else if (!this.itemDescription.equals(other.itemDescription))
            return false;
        if (this.masterProductNameEn == null) {
            if (other.masterProductNameEn != null)
                return false;
        }
        else if (!this.masterProductNameEn.equals(other.masterProductNameEn))
            return false;
        if (this.masterProductNameAr == null) {
            if (other.masterProductNameAr != null)
                return false;
        }
        else if (!this.masterProductNameAr.equals(other.masterProductNameAr))
            return false;
        if (this.categoryEn == null) {
            if (other.categoryEn != null)
                return false;
        }
        else if (!this.categoryEn.equals(other.categoryEn))
            return false;
        if (this.categoryAr == null) {
            if (other.categoryAr != null)
                return false;
        }
        else if (!this.categoryAr.equals(other.categoryAr))
            return false;
        if (this.quantity == null) {
            if (other.quantity != null)
                return false;
        }
        else if (!this.quantity.equals(other.quantity))
            return false;
        if (this.unitPrice == null) {
            if (other.unitPrice != null)
                return false;
        }
        else if (!this.unitPrice.equals(other.unitPrice))
            return false;
        if (this.itemSubtotal == null) {
            if (other.itemSubtotal != null)
                return false;
        }
        else if (!this.itemSubtotal.equals(other.itemSubtotal))
            return false;
        if (this.brandName == null) {
            if (other.brandName != null)
                return false;
        }
        else if (!this.brandName.equals(other.brandName))
            return false;
        if (this.itemAttributes == null) {
            if (other.itemAttributes != null)
                return false;
        }
        else if (!this.itemAttributes.equals(other.itemAttributes))
            return false;
        if (this.itemCostPrice == null) {
            if (other.itemCostPrice != null)
                return false;
        }
        else if (!this.itemCostPrice.equals(other.itemCostPrice))
            return false;
        if (this.itemProfitOnItem == null) {
            if (other.itemProfitOnItem != null)
                return false;
        }
        else if (!this.itemProfitOnItem.equals(other.itemProfitOnItem))
            return false;
        if (this.orderSubtotal == null) {
            if (other.orderSubtotal != null)
                return false;
        }
        else if (!this.orderSubtotal.equals(other.orderSubtotal))
            return false;
        if (this.orderDiscount == null) {
            if (other.orderDiscount != null)
                return false;
        }
        else if (!this.orderDiscount.equals(other.orderDiscount))
            return false;
        if (this.orderTotal == null) {
            if (other.orderTotal != null)
                return false;
        }
        else if (!this.orderTotal.equals(other.orderTotal))
            return false;
        if (this.orderAmountPaid == null) {
            if (other.orderAmountPaid != null)
                return false;
        }
        else if (!this.orderAmountPaid.equals(other.orderAmountPaid))
            return false;
        if (this.orderBalanceDue == null) {
            if (other.orderBalanceDue != null)
                return false;
        }
        else if (!this.orderBalanceDue.equals(other.orderBalanceDue))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.salesOrderId == null) ? 0 : this.salesOrderId.hashCode());
        result = prime * result + ((this.orderDate == null) ? 0 : this.orderDate.hashCode());
        result = prime * result + ((this.systemPatientId == null) ? 0 : this.systemPatientId.hashCode());
        result = prime * result + ((this.patientName == null) ? 0 : this.patientName.hashCode());
        result = prime * result + ((this.createdByUser == null) ? 0 : this.createdByUser.hashCode());
        result = prime * result + ((this.shiftId == null) ? 0 : this.shiftId.hashCode());
        result = prime * result + ((this.shiftUser == null) ? 0 : this.shiftUser.hashCode());
        result = prime * result + ((this.orderStatus == null) ? 0 : this.orderStatus.hashCode());
        result = prime * result + ((this.soItemId == null) ? 0 : this.soItemId.hashCode());
        result = prime * result + ((this.itemDescription == null) ? 0 : this.itemDescription.hashCode());
        result = prime * result + ((this.masterProductNameEn == null) ? 0 : this.masterProductNameEn.hashCode());
        result = prime * result + ((this.masterProductNameAr == null) ? 0 : this.masterProductNameAr.hashCode());
        result = prime * result + ((this.categoryEn == null) ? 0 : this.categoryEn.hashCode());
        result = prime * result + ((this.categoryAr == null) ? 0 : this.categoryAr.hashCode());
        result = prime * result + ((this.quantity == null) ? 0 : this.quantity.hashCode());
        result = prime * result + ((this.unitPrice == null) ? 0 : this.unitPrice.hashCode());
        result = prime * result + ((this.itemSubtotal == null) ? 0 : this.itemSubtotal.hashCode());
        result = prime * result + ((this.brandName == null) ? 0 : this.brandName.hashCode());
        result = prime * result + ((this.itemAttributes == null) ? 0 : this.itemAttributes.hashCode());
        result = prime * result + ((this.itemCostPrice == null) ? 0 : this.itemCostPrice.hashCode());
        result = prime * result + ((this.itemProfitOnItem == null) ? 0 : this.itemProfitOnItem.hashCode());
        result = prime * result + ((this.orderSubtotal == null) ? 0 : this.orderSubtotal.hashCode());
        result = prime * result + ((this.orderDiscount == null) ? 0 : this.orderDiscount.hashCode());
        result = prime * result + ((this.orderTotal == null) ? 0 : this.orderTotal.hashCode());
        result = prime * result + ((this.orderAmountPaid == null) ? 0 : this.orderAmountPaid.hashCode());
        result = prime * result + ((this.orderBalanceDue == null) ? 0 : this.orderBalanceDue.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Salesdetailedview (");

        sb.append(salesOrderId);
        sb.append(", ").append(orderDate);
        sb.append(", ").append(systemPatientId);
        sb.append(", ").append(patientName);
        sb.append(", ").append(createdByUser);
        sb.append(", ").append(shiftId);
        sb.append(", ").append(shiftUser);
        sb.append(", ").append(orderStatus);
        sb.append(", ").append(soItemId);
        sb.append(", ").append(itemDescription);
        sb.append(", ").append(masterProductNameEn);
        sb.append(", ").append(masterProductNameAr);
        sb.append(", ").append(categoryEn);
        sb.append(", ").append(categoryAr);
        sb.append(", ").append(quantity);
        sb.append(", ").append(unitPrice);
        sb.append(", ").append(itemSubtotal);
        sb.append(", ").append(brandName);
        sb.append(", ").append(itemAttributes);
        sb.append(", ").append(itemCostPrice);
        sb.append(", ").append(itemProfitOnItem);
        sb.append(", ").append(orderSubtotal);
        sb.append(", ").append(orderDiscount);
        sb.append(", ").append(orderTotal);
        sb.append(", ").append(orderAmountPaid);
        sb.append(", ").append(orderBalanceDue);

        sb.append(")");
        return sb.toString();
    }
}
