/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.records;


import com.basariatpos.db.generated.tables.Purchaseorders;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PurchaseordersRecord extends UpdatableRecordImpl<PurchaseordersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.purchaseorders.purchase_order_id</code>.
     */
    public void setPurchaseOrderId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.purchaseorders.purchase_order_id</code>.
     */
    public Integer getPurchaseOrderId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.purchaseorders.order_date</code>.
     */
    public void setOrderDate(LocalDate value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.purchaseorders.order_date</code>.
     */
    public LocalDate getOrderDate() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.purchaseorders.supplier_name</code>.
     */
    public void setSupplierName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.purchaseorders.supplier_name</code>.
     */
    public String getSupplierName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.purchaseorders.total_amount</code>.
     */
    public void setTotalAmount(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.purchaseorders.total_amount</code>.
     */
    public BigDecimal getTotalAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.purchaseorders.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.purchaseorders.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.purchaseorders.created_by_user_id</code>.
     */
    public void setCreatedByUserId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.purchaseorders.created_by_user_id</code>.
     */
    public Integer getCreatedByUserId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.purchaseorders.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.purchaseorders.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>public.purchaseorders.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.purchaseorders.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PurchaseordersRecord
     */
    public PurchaseordersRecord() {
        super(Purchaseorders.PURCHASEORDERS);
    }

    /**
     * Create a detached, initialised PurchaseordersRecord
     */
    public PurchaseordersRecord(Integer purchaseOrderId, LocalDate orderDate, String supplierName, BigDecimal totalAmount, String status, Integer createdByUserId, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(Purchaseorders.PURCHASEORDERS);

        setPurchaseOrderId(purchaseOrderId);
        setOrderDate(orderDate);
        setSupplierName(supplierName);
        setTotalAmount(totalAmount);
        setStatus(status);
        setCreatedByUserId(createdByUserId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PurchaseordersRecord
     */
    public PurchaseordersRecord(com.basariatpos.db.generated.tables.pojos.Purchaseorders value) {
        super(Purchaseorders.PURCHASEORDERS);

        if (value != null) {
            setPurchaseOrderId(value.getPurchaseOrderId());
            setOrderDate(value.getOrderDate());
            setSupplierName(value.getSupplierName());
            setTotalAmount(value.getTotalAmount());
            setStatus(value.getStatus());
            setCreatedByUserId(value.getCreatedByUserId());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
