/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.records;


import com.basariatpos.db.generated.tables.Shiftreportdetailedtransactionsview;

import java.math.BigDecimal;
import java.time.OffsetDateTime;

import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ShiftreportdetailedtransactionsviewRecord extends TableRecordImpl<ShiftreportdetailedtransactionsviewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.shift_id</code>.
     */
    public void setShiftId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.shift_id</code>.
     */
    public Integer getShiftId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.transaction_group</code>.
     */
    public void setTransactionGroup(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.transaction_group</code>.
     */
    public String getTransactionGroup() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.transaction_type</code>.
     */
    public void setTransactionType(String value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.transaction_type</code>.
     */
    public String getTransactionType() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.reference_id</code>.
     */
    public void setReferenceId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.reference_id</code>.
     */
    public Integer getReferenceId() {
        return (Integer) get(3);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.transaction_sub_id</code>.
     */
    public void setTransactionSubId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.transaction_sub_id</code>.
     */
    public Integer getTransactionSubId() {
        return (Integer) get(4);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.transaction_timestamp</code>.
     */
    public void setTransactionTimestamp(OffsetDateTime value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.transaction_timestamp</code>.
     */
    public OffsetDateTime getTransactionTimestamp() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.description</code>.
     */
    public void setDescription(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.description</code>.
     */
    public String getDescription() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.quantity</code>.
     */
    public void setQuantity(Integer value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(7);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.unit_price</code>.
     */
    public void setUnitPrice(BigDecimal value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.unit_price</code>.
     */
    public BigDecimal getUnitPrice() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.payment_method</code>.
     */
    public void setPaymentMethod(String value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.payment_method</code>.
     */
    public String getPaymentMethod() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.patient_name</code>.
     */
    public void setPatientName(String value) {
        set(11, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.patient_name</code>.
     */
    public String getPatientName() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>public.shiftreportdetailedtransactionsview.user_performing</code>.
     */
    public void setUserPerforming(String value) {
        set(12, value);
    }

    /**
     * Getter for
     * <code>public.shiftreportdetailedtransactionsview.user_performing</code>.
     */
    public String getUserPerforming() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShiftreportdetailedtransactionsviewRecord
     */
    public ShiftreportdetailedtransactionsviewRecord() {
        super(Shiftreportdetailedtransactionsview.SHIFTREPORTDETAILEDTRANSACTIONSVIEW);
    }

    /**
     * Create a detached, initialised ShiftreportdetailedtransactionsviewRecord
     */
    public ShiftreportdetailedtransactionsviewRecord(Integer shiftId, String transactionGroup, String transactionType, Integer referenceId, Integer transactionSubId, OffsetDateTime transactionTimestamp, String description, Integer quantity, BigDecimal unitPrice, BigDecimal amount, String paymentMethod, String patientName, String userPerforming) {
        super(Shiftreportdetailedtransactionsview.SHIFTREPORTDETAILEDTRANSACTIONSVIEW);

        setShiftId(shiftId);
        setTransactionGroup(transactionGroup);
        setTransactionType(transactionType);
        setReferenceId(referenceId);
        setTransactionSubId(transactionSubId);
        setTransactionTimestamp(transactionTimestamp);
        setDescription(description);
        setQuantity(quantity);
        setUnitPrice(unitPrice);
        setAmount(amount);
        setPaymentMethod(paymentMethod);
        setPatientName(patientName);
        setUserPerforming(userPerforming);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ShiftreportdetailedtransactionsviewRecord
     */
    public ShiftreportdetailedtransactionsviewRecord(com.basariatpos.db.generated.tables.pojos.Shiftreportdetailedtransactionsview value) {
        super(Shiftreportdetailedtransactionsview.SHIFTREPORTDETAILEDTRANSACTIONSVIEW);

        if (value != null) {
            setShiftId(value.getShiftId());
            setTransactionGroup(value.getTransactionGroup());
            setTransactionType(value.getTransactionType());
            setReferenceId(value.getReferenceId());
            setTransactionSubId(value.getTransactionSubId());
            setTransactionTimestamp(value.getTransactionTimestamp());
            setDescription(value.getDescription());
            setQuantity(value.getQuantity());
            setUnitPrice(value.getUnitPrice());
            setAmount(value.getAmount());
            setPaymentMethod(value.getPaymentMethod());
            setPatientName(value.getPatientName());
            setUserPerforming(value.getUserPerforming());
            resetChangedOnNotNull();
        }
    }
}
