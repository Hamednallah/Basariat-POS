/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.records;


import com.basariatpos.db.generated.tables.Appointments;

import java.time.OffsetDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AppointmentsRecord extends UpdatableRecordImpl<AppointmentsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.appointments.appointment_id</code>.
     */
    public void setAppointmentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.appointments.appointment_id</code>.
     */
    public Integer getAppointmentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.appointments.sales_order_id</code>.
     */
    public void setSalesOrderId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.appointments.sales_order_id</code>.
     */
    public Integer getSalesOrderId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.appointments.appointment_datetime</code>.
     */
    public void setAppointmentDatetime(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.appointments.appointment_datetime</code>.
     */
    public OffsetDateTime getAppointmentDatetime() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>public.appointments.status</code>.
     */
    public void setStatus(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.appointments.status</code>.
     */
    public String getStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.appointments.notes</code>.
     */
    public void setNotes(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.appointments.notes</code>.
     */
    public String getNotes() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.appointments.created_by_user_id</code>.
     */
    public void setCreatedByUserId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.appointments.created_by_user_id</code>.
     */
    public Integer getCreatedByUserId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.appointments.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.appointments.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(6);
    }

    /**
     * Setter for <code>public.appointments.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.appointments.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return (OffsetDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AppointmentsRecord
     */
    public AppointmentsRecord() {
        super(Appointments.APPOINTMENTS);
    }

    /**
     * Create a detached, initialised AppointmentsRecord
     */
    public AppointmentsRecord(Integer appointmentId, Integer salesOrderId, OffsetDateTime appointmentDatetime, String status, String notes, Integer createdByUserId, OffsetDateTime createdAt, OffsetDateTime updatedAt) {
        super(Appointments.APPOINTMENTS);

        setAppointmentId(appointmentId);
        setSalesOrderId(salesOrderId);
        setAppointmentDatetime(appointmentDatetime);
        setStatus(status);
        setNotes(notes);
        setCreatedByUserId(createdByUserId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AppointmentsRecord
     */
    public AppointmentsRecord(com.basariatpos.db.generated.tables.pojos.Appointments value) {
        super(Appointments.APPOINTMENTS);

        if (value != null) {
            setAppointmentId(value.getAppointmentId());
            setSalesOrderId(value.getSalesOrderId());
            setAppointmentDatetime(value.getAppointmentDatetime());
            setStatus(value.getStatus());
            setNotes(value.getNotes());
            setCreatedByUserId(value.getCreatedByUserId());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
