/*
 * This file is generated by jOOQ.
 */
package com.basariatpos.db.generated.tables.records;


import com.basariatpos.db.generated.tables.Salesorderitems;

import java.math.BigDecimal;

import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SalesorderitemsRecord extends UpdatableRecordImpl<SalesorderitemsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.salesorderitems.so_item_id</code>.
     */
    public void setSoItemId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.salesorderitems.so_item_id</code>.
     */
    public Integer getSoItemId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.salesorderitems.sales_order_id</code>.
     */
    public void setSalesOrderId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.salesorderitems.sales_order_id</code>.
     */
    public Integer getSalesOrderId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.salesorderitems.inventory_item_id</code>.
     */
    public void setInventoryItemId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.salesorderitems.inventory_item_id</code>.
     */
    public Integer getInventoryItemId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.salesorderitems.service_product_id</code>.
     */
    public void setServiceProductId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.salesorderitems.service_product_id</code>.
     */
    public Integer getServiceProductId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.salesorderitems.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.salesorderitems.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.salesorderitems.quantity</code>.
     */
    public void setQuantity(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.salesorderitems.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.salesorderitems.unit_price</code>.
     */
    public void setUnitPrice(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.salesorderitems.unit_price</code>.
     */
    public BigDecimal getUnitPrice() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.salesorderitems.item_subtotal</code>.
     */
    public void setItemSubtotal(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.salesorderitems.item_subtotal</code>.
     */
    public BigDecimal getItemSubtotal() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>public.salesorderitems.prescription_details</code>.
     */
    public void setPrescriptionDetails(JSONB value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.salesorderitems.prescription_details</code>.
     */
    public JSONB getPrescriptionDetails() {
        return (JSONB) get(8);
    }

    /**
     * Setter for <code>public.salesorderitems.is_custom_lenses</code>.
     */
    public void setIsCustomLenses(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.salesorderitems.is_custom_lenses</code>.
     */
    public Boolean getIsCustomLenses() {
        return (Boolean) get(9);
    }

    /**
     * Setter for
     * <code>public.salesorderitems.is_restocked_on_abandonment</code>.
     */
    public void setIsRestockedOnAbandonment(Boolean value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>public.salesorderitems.is_restocked_on_abandonment</code>.
     */
    public Boolean getIsRestockedOnAbandonment() {
        return (Boolean) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SalesorderitemsRecord
     */
    public SalesorderitemsRecord() {
        super(Salesorderitems.SALESORDERITEMS);
    }

    /**
     * Create a detached, initialised SalesorderitemsRecord
     */
    public SalesorderitemsRecord(Integer soItemId, Integer salesOrderId, Integer inventoryItemId, Integer serviceProductId, String description, Integer quantity, BigDecimal unitPrice, BigDecimal itemSubtotal, JSONB prescriptionDetails, Boolean isCustomLenses, Boolean isRestockedOnAbandonment) {
        super(Salesorderitems.SALESORDERITEMS);

        setSoItemId(soItemId);
        setSalesOrderId(salesOrderId);
        setInventoryItemId(inventoryItemId);
        setServiceProductId(serviceProductId);
        setDescription(description);
        setQuantity(quantity);
        setUnitPrice(unitPrice);
        setItemSubtotal(itemSubtotal);
        setPrescriptionDetails(prescriptionDetails);
        setIsCustomLenses(isCustomLenses);
        setIsRestockedOnAbandonment(isRestockedOnAbandonment);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SalesorderitemsRecord
     */
    public SalesorderitemsRecord(com.basariatpos.db.generated.tables.pojos.Salesorderitems value) {
        super(Salesorderitems.SALESORDERITEMS);

        if (value != null) {
            setSoItemId(value.getSoItemId());
            setSalesOrderId(value.getSalesOrderId());
            setInventoryItemId(value.getInventoryItemId());
            setServiceProductId(value.getServiceProductId());
            setDescription(value.getDescription());
            setQuantity(value.getQuantity());
            setUnitPrice(value.getUnitPrice());
            setItemSubtotal(value.getItemSubtotal());
            setPrescriptionDetails(value.getPrescriptionDetails());
            setIsCustomLenses(value.getIsCustomLenses());
            setIsRestockedOnAbandonment(value.getIsRestockedOnAbandonment());
            resetChangedOnNotNull();
        }
    }
}
